{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter } from '@angular/core';\r\nimport DxButton from 'devextreme/ui/button';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The Button widget is a simple button that performs specified commands when a user clicks it.\r\n */\r\nexport declare class DxButtonComponent extends DxComponent implements OnDestroy {\r\n    instance: DxButton;\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    accessKey: string;\r\n    /**\r\n     * A Boolean value specifying whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    activeStateEnabled: boolean;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    focusStateEnabled: boolean;\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    hint: string;\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    hoverStateEnabled: boolean;\r\n    /**\r\n     * Specifies the icon to be displayed on the button.\r\n     */\r\n    icon: string;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies how the button is styled.\r\n     */\r\n    stylingMode: string;\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    tabIndex: number;\r\n    /**\r\n     * Specifies a custom template for the Button widget.\r\n     */\r\n    template: any;\r\n    /**\r\n     * The text displayed on the button.\r\n     */\r\n    text: string;\r\n    /**\r\n     * Specifies the button type.\r\n     */\r\n    type: string;\r\n    /**\r\n     * Specifies whether the button submits an HTML form.\r\n     */\r\n    useSubmitBehavior: boolean;\r\n    /**\r\n     * Specifies the name of the validation group to be accessed in the click event handler.\r\n     */\r\n    validationGroup: string;\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n     * A function that is executed when the Button is clicked or tapped.\r\n     */\r\n    onClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    onContentReady: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    accessKeyChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    hintChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    iconChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    stylingModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    templateChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    textChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    typeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    useSubmitBehaviorChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    validationGroupChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxButton;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class DxButtonModule {\r\n}\r\n"]}