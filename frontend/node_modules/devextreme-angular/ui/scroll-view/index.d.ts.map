{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter } from '@angular/core';\r\nimport DxScrollView from 'devextreme/ui/scroll_view';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The ScrollView is a widget that enables a user to scroll its content.\r\n */\r\nexport declare class DxScrollViewComponent extends DxComponent implements OnDestroy {\r\n    instance: DxScrollView;\r\n    /**\r\n     * A Boolean value specifying whether to enable or disable the bounce-back effect.\r\n     */\r\n    bounceEnabled: boolean;\r\n    /**\r\n     * A string value specifying the available scrolling directions.\r\n     */\r\n    direction: string;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.\r\n     */\r\n    pulledDownText: string;\r\n    /**\r\n     * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.\r\n     */\r\n    pullingDownText: string;\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.\r\n     */\r\n    reachBottomText: string;\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.\r\n     */\r\n    refreshingText: string;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * A Boolean value specifying whether or not an end-user can scroll the widget content swiping it up or down. Applies only if useNative is false\r\n     */\r\n    scrollByContent: boolean;\r\n    /**\r\n     * A Boolean value specifying whether or not an end-user can scroll the widget content using the scrollbar.\r\n     */\r\n    scrollByThumb: boolean;\r\n    /**\r\n     * Specifies when the widget shows the scrollbar.\r\n     */\r\n    showScrollbar: string;\r\n    /**\r\n     * Indicates whether to use native or simulated scrolling.\r\n     */\r\n    useNative: boolean;\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the \"pull to refresh\" gesture is performed. Supported in mobile themes only.\r\n     */\r\n    onPullDown: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the content is scrolled down to the bottom.\r\n     */\r\n    onReachBottom: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed on each scroll gesture.\r\n     */\r\n    onScroll: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed each time the widget is updated.\r\n     */\r\n    onUpdated: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    bounceEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    directionChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pulledDownTextChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pullingDownTextChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    reachBottomTextChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    refreshingTextChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    scrollByContentChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    scrollByThumbChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    showScrollbarChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    useNativeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxScrollView;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class DxScrollViewModule {\r\n}\r\n"]}