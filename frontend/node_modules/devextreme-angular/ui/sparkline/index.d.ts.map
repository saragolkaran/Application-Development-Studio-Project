{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxSparkline from 'devextreme/viz/sparkline';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The Sparkline widget is a compact chart that contains only one series. Owing to their size, sparklines occupy very little space and can be easily collected in a table or embedded straight in text.\r\n */\r\nexport declare class DxSparklineComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxSparkline;\r\n    /**\r\n     * Specifies the data source field that provides arguments for a sparkline.\r\n     */\r\n    argumentField: string;\r\n    /**\r\n     * Sets a color for the bars indicating negative values. Available for a sparkline of the bar type only.\r\n     */\r\n    barNegativeColor: string;\r\n    /**\r\n     * Sets a color for the bars indicating positive values. Available for a sparkline of the bar type only.\r\n     */\r\n    barPositiveColor: string;\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Sets a color for the boundary of both the first and last points on a sparkline.\r\n     */\r\n    firstLastColor: string;\r\n    /**\r\n     * Specifies whether the sparkline should ignore null data points.\r\n     */\r\n    ignoreEmptyPoints: boolean;\r\n    /**\r\n     * Sets a color for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * Specifies a width for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    lineWidth: number;\r\n    /**\r\n     * Sets a color for the bars indicating the values that are less than the winloss threshold. Available for a sparkline of the winloss type only.\r\n     */\r\n    lossColor: string;\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    margin: {\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    };\r\n    /**\r\n     * Sets a color for the boundary of the maximum point on a sparkline.\r\n     */\r\n    maxColor: string;\r\n    /**\r\n     * Specifies the maximum value of the sparkline's value axis.\r\n     */\r\n    maxValue: number;\r\n    /**\r\n     * Sets a color for the boundary of the minimum point on a sparkline.\r\n     */\r\n    minColor: string;\r\n    /**\r\n     * Specifies the minimum value of the sparkline value axis.\r\n     */\r\n    minValue: number;\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Sets a color for points on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    pointColor: string;\r\n    /**\r\n     * Specifies the diameter of sparkline points in pixels. Available for the sparklines of line- and area-like types.\r\n     */\r\n    pointSize: number;\r\n    /**\r\n     * Specifies a symbol to use as a point marker on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    pointSymbol: string;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies whether or not to indicate both the first and last values on a sparkline.\r\n     */\r\n    showFirstLast: boolean;\r\n    /**\r\n     * Specifies whether or not to indicate both the minimum and maximum values on a sparkline.\r\n     */\r\n    showMinMax: boolean;\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures the tooltip.\r\n     */\r\n    tooltip: {\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    };\r\n    /**\r\n     * Determines the type of a sparkline.\r\n     */\r\n    type: string;\r\n    /**\r\n     * Specifies the data source field that provides values for a sparkline.\r\n     */\r\n    valueField: string;\r\n    /**\r\n     * Sets a color for the bars indicating the values greater than a winloss threshold. Available for a sparkline of the winloss type only.\r\n     */\r\n    winColor: string;\r\n    /**\r\n     * Specifies a value that serves as a threshold for the sparkline of the winloss type.\r\n     */\r\n    winlossThreshold: number;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    onTooltipHidden: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    onTooltipShown: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    argumentFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    barNegativeColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    barPositiveColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    firstLastColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    ignoreEmptyPointsChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    lineColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    lineWidthChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    lossColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    marginChange: EventEmitter<{\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    maxColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    maxValueChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    minColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    minValueChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pointColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pointSizeChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pointSymbolChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    showFirstLastChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    showMinMaxChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tooltipChange: EventEmitter<{\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    typeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    valueFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    winColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    winlossThresholdChange: EventEmitter<number>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxSparkline;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxSparklineModule {\r\n}\r\n"]}