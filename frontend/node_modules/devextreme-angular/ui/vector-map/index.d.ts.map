{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxVectorMap from 'devextreme/viz/vector_map';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiLayerComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiLegendComponent } from 'devextreme-angular/ui/nested';\r\n/**\r\n * The VectorMap is a widget that visualizes geographical locations. This widget represents a geographical map that contains areas and markers. Areas embody continents and countries. Markers flag specific points on the map, for example, towns, cities or capitals.\r\n */\r\nexport declare class DxVectorMapComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxVectorMap;\r\n    /**\r\n     * Specifies the options for the map background.\r\n     */\r\n    background: {\r\n        borderColor?: string;\r\n        color?: string;\r\n    };\r\n    /**\r\n     * Specifies the positioning of a map in geographical coordinates.\r\n     */\r\n    bounds: Array<number>;\r\n    /**\r\n     * Specifies the geographical coordinates of the center for a map.\r\n     */\r\n    center: Array<number>;\r\n    /**\r\n     * Configures the control bar.\r\n     */\r\n    controlBar: {\r\n        borderColor?: string;\r\n        color?: string;\r\n        enabled?: boolean;\r\n        horizontalAlignment?: string;\r\n        margin?: number;\r\n        opacity?: number;\r\n        verticalAlignment?: string;\r\n    };\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    export: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    };\r\n    /**\r\n     * Specifies options for VectorMap widget layers.\r\n     */\r\n    layers: Array<any | {\r\n        borderColor?: string;\r\n        borderWidth?: number;\r\n        color?: string;\r\n        colorGroupingField?: string;\r\n        colorGroups?: Array<number>;\r\n        customize?: Function;\r\n        dataField?: string;\r\n        dataSource?: any | DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string;\r\n        elementType?: string;\r\n        hoveredBorderColor?: string;\r\n        hoveredBorderWidth?: number;\r\n        hoveredColor?: string;\r\n        hoverEnabled?: boolean;\r\n        label?: {\r\n            dataField?: string;\r\n            enabled?: boolean;\r\n            font?: DevExpress.viz.Font;\r\n        };\r\n        maxSize?: number;\r\n        minSize?: number;\r\n        name?: string;\r\n        opacity?: number;\r\n        palette?: string | Array<string>;\r\n        paletteSize?: number;\r\n        selectedBorderColor?: string;\r\n        selectedBorderWidth?: number;\r\n        selectedColor?: string;\r\n        selectionMode?: string;\r\n        size?: number;\r\n        sizeGroupingField?: string;\r\n        sizeGroups?: Array<number>;\r\n        type?: string;\r\n    }>;\r\n    /**\r\n     * Configures map legends.\r\n     */\r\n    legends: Array<any | {\r\n        backgroundColor?: string;\r\n        border?: {\r\n            color?: string;\r\n            cornerRadius?: number;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        columnCount?: number;\r\n        columnItemSpacing?: number;\r\n        customizeHint?: Function;\r\n        customizeItems?: Function;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        itemsAlignment?: string;\r\n        itemTextPosition?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        markerColor?: string;\r\n        markerShape?: string;\r\n        markerSize?: number;\r\n        markerTemplate?: any;\r\n        orientation?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        rowCount?: number;\r\n        rowItemSpacing?: number;\r\n        source?: {\r\n            grouping?: string;\r\n            layer?: string;\r\n        };\r\n        title?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            horizontalAlignment?: string;\r\n            margin?: {\r\n                bottom?: number;\r\n                left?: number;\r\n                right?: number;\r\n                top?: number;\r\n            };\r\n            placeholderSize?: number;\r\n            subtitle?: string | {\r\n                font?: DevExpress.viz.Font;\r\n                offset?: number;\r\n                text?: string;\r\n            };\r\n            text?: string;\r\n            verticalAlignment?: string;\r\n        };\r\n        verticalAlignment?: string;\r\n        visible?: boolean;\r\n    }>;\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    loadingIndicator: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    };\r\n    /**\r\n     * Specifies a map's maximum zoom factor.\r\n     */\r\n    maxZoomFactor: number;\r\n    /**\r\n     * Disables the panning capability.\r\n     */\r\n    panningEnabled: boolean;\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Specifies the map projection.\r\n     */\r\n    projection: any | DevExpress.viz.VectorMapProjectionConfig | string;\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    redrawOnResize: boolean;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    title: string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    };\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    tooltip: {\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    };\r\n    /**\r\n     * Specifies whether the map should respond to touch gestures.\r\n     */\r\n    touchEnabled: boolean;\r\n    /**\r\n     * Specifies whether or not the map should respond when a user rolls the mouse wheel.\r\n     */\r\n    wheelEnabled: boolean;\r\n    /**\r\n     * Specifies a number that is used to zoom a map initially.\r\n     */\r\n    zoomFactor: number;\r\n    /**\r\n     * Disables the zooming capability.\r\n     */\r\n    zoomingEnabled: boolean;\r\n    /**\r\n     * A function that is executed each time the center coordinates are changed.\r\n     */\r\n    onCenterChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when any location on the map is clicked or tapped.\r\n     */\r\n    onClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a layer element is selected or selection is canceled.\r\n     */\r\n    onSelectionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    onTooltipHidden: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    onTooltipShown: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed each time the zoom factor is changed.\r\n     */\r\n    onZoomFactorChanged: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    backgroundChange: EventEmitter<{\r\n        borderColor?: string;\r\n        color?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    boundsChange: EventEmitter<Array<number>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    centerChange: EventEmitter<Array<number>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    controlBarChange: EventEmitter<{\r\n        borderColor?: string;\r\n        color?: string;\r\n        enabled?: boolean;\r\n        horizontalAlignment?: string;\r\n        margin?: number;\r\n        opacity?: number;\r\n        verticalAlignment?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    exportChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    layersChange: EventEmitter<Array<any | {\r\n        borderColor?: string;\r\n        borderWidth?: number;\r\n        color?: string;\r\n        colorGroupingField?: string;\r\n        colorGroups?: Array<number>;\r\n        customize?: Function;\r\n        dataField?: string;\r\n        dataSource?: any | DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string;\r\n        elementType?: string;\r\n        hoveredBorderColor?: string;\r\n        hoveredBorderWidth?: number;\r\n        hoveredColor?: string;\r\n        hoverEnabled?: boolean;\r\n        label?: {\r\n            dataField?: string;\r\n            enabled?: boolean;\r\n            font?: DevExpress.viz.Font;\r\n        };\r\n        maxSize?: number;\r\n        minSize?: number;\r\n        name?: string;\r\n        opacity?: number;\r\n        palette?: string | Array<string>;\r\n        paletteSize?: number;\r\n        selectedBorderColor?: string;\r\n        selectedBorderWidth?: number;\r\n        selectedColor?: string;\r\n        selectionMode?: string;\r\n        size?: number;\r\n        sizeGroupingField?: string;\r\n        sizeGroups?: Array<number>;\r\n        type?: string;\r\n    }>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    legendsChange: EventEmitter<Array<any | {\r\n        backgroundColor?: string;\r\n        border?: {\r\n            color?: string;\r\n            cornerRadius?: number;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        columnCount?: number;\r\n        columnItemSpacing?: number;\r\n        customizeHint?: Function;\r\n        customizeItems?: Function;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        itemsAlignment?: string;\r\n        itemTextPosition?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        markerColor?: string;\r\n        markerShape?: string;\r\n        markerSize?: number;\r\n        markerTemplate?: any;\r\n        orientation?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        rowCount?: number;\r\n        rowItemSpacing?: number;\r\n        source?: {\r\n            grouping?: string;\r\n            layer?: string;\r\n        };\r\n        title?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            horizontalAlignment?: string;\r\n            margin?: {\r\n                bottom?: number;\r\n                left?: number;\r\n                right?: number;\r\n                top?: number;\r\n            };\r\n            placeholderSize?: number;\r\n            subtitle?: string | {\r\n                font?: DevExpress.viz.Font;\r\n                offset?: number;\r\n                text?: string;\r\n            };\r\n            text?: string;\r\n            verticalAlignment?: string;\r\n        };\r\n        verticalAlignment?: string;\r\n        visible?: boolean;\r\n    }>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    loadingIndicatorChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    maxZoomFactorChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    panningEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    projectionChange: EventEmitter<any | DevExpress.viz.VectorMapProjectionConfig | string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    redrawOnResizeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    titleChange: EventEmitter<string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tooltipChange: EventEmitter<{\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    touchEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    wheelEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    zoomFactorChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    zoomingEnabledChange: EventEmitter<boolean>;\r\n    layersChildren: QueryList<DxiLayerComponent>;\r\n    legendsChildren: QueryList<DxiLegendComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxVectorMap;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxVectorMapModule {\r\n}\r\n"]}