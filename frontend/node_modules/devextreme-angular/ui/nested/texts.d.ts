/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoTextsComponent extends NestedOption implements OnDestroy, OnInit {
    fix: string;
    leftPosition: string;
    rightPosition: string;
    unfix: string;
    addRow: string;
    cancelAllChanges: string;
    cancelRowChanges: string;
    confirmDeleteMessage: string;
    confirmDeleteTitle: string;
    deleteRow: string;
    editRow: string;
    saveAllChanges: string;
    saveRowChanges: string;
    undeleteRow: string;
    validationCancelChanges: string;
    exportAll: string;
    exportSelectedRows: string;
    exportTo: string;
    clearFilter: string;
    createFilter: string;
    filterEnabledHint: string;
    groupByThisColumn: string;
    groupContinuedMessage: string;
    groupContinuesMessage: string;
    ungroup: string;
    ungroupAll: string;
    cancel: string;
    emptyValue: string;
    ok: string;
    avg: string;
    avgOtherColumn: string;
    count: string;
    max: string;
    maxOtherColumn: string;
    min: string;
    minOtherColumn: string;
    sum: string;
    sumOtherColumn: string;
    allFields: string;
    columnFields: string;
    dataFields: string;
    filterFields: string;
    rowFields: string;
    columnFieldArea: string;
    dataFieldArea: string;
    filterFieldArea: string;
    rowFieldArea: string;
    collapseAll: string;
    dataNotAvailable: string;
    expandAll: string;
    exportToExcel: string;
    grandTotal: string;
    noData: string;
    removeAllSorting: string;
    showFieldChooser: string;
    sortColumnBySummary: string;
    sortRowBySummary: string;
    total: string;
    addRowToNode: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoTextsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoTextsComponent, "dxo-texts", never, { "fix": "fix"; "leftPosition": "leftPosition"; "rightPosition": "rightPosition"; "unfix": "unfix"; "addRow": "addRow"; "cancelAllChanges": "cancelAllChanges"; "cancelRowChanges": "cancelRowChanges"; "confirmDeleteMessage": "confirmDeleteMessage"; "confirmDeleteTitle": "confirmDeleteTitle"; "deleteRow": "deleteRow"; "editRow": "editRow"; "saveAllChanges": "saveAllChanges"; "saveRowChanges": "saveRowChanges"; "undeleteRow": "undeleteRow"; "validationCancelChanges": "validationCancelChanges"; "exportAll": "exportAll"; "exportSelectedRows": "exportSelectedRows"; "exportTo": "exportTo"; "clearFilter": "clearFilter"; "createFilter": "createFilter"; "filterEnabledHint": "filterEnabledHint"; "groupByThisColumn": "groupByThisColumn"; "groupContinuedMessage": "groupContinuedMessage"; "groupContinuesMessage": "groupContinuesMessage"; "ungroup": "ungroup"; "ungroupAll": "ungroupAll"; "cancel": "cancel"; "emptyValue": "emptyValue"; "ok": "ok"; "avg": "avg"; "avgOtherColumn": "avgOtherColumn"; "count": "count"; "max": "max"; "maxOtherColumn": "maxOtherColumn"; "min": "min"; "minOtherColumn": "minOtherColumn"; "sum": "sum"; "sumOtherColumn": "sumOtherColumn"; "allFields": "allFields"; "columnFields": "columnFields"; "dataFields": "dataFields"; "filterFields": "filterFields"; "rowFields": "rowFields"; "columnFieldArea": "columnFieldArea"; "dataFieldArea": "dataFieldArea"; "filterFieldArea": "filterFieldArea"; "rowFieldArea": "rowFieldArea"; "collapseAll": "collapseAll"; "dataNotAvailable": "dataNotAvailable"; "expandAll": "expandAll"; "exportToExcel": "exportToExcel"; "grandTotal": "grandTotal"; "noData": "noData"; "removeAllSorting": "removeAllSorting"; "showFieldChooser": "showFieldChooser"; "sortColumnBySummary": "sortColumnBySummary"; "sortRowBySummary": "sortRowBySummary"; "total": "total"; "addRowToNode": "addRowToNode"; }, {}, never, never>;
}
export declare class DxoTextsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoTextsModule, [typeof DxoTextsComponent], never, [typeof DxoTextsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoTextsModule>;
}

//# sourceMappingURL=texts.d.ts.map