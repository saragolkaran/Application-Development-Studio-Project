/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoLabelComponent extends NestedOption implements OnDestroy, OnInit {
    connectorColor: string;
    connectorWidth: number;
    customizeText: Function;
    font: DevExpress.viz.Font;
    format: DevExpress.ui.format | string;
    indent: number;
    visible: boolean;
    horizontalAlignment: string;
    position: string;
    text: string;
    verticalAlignment: string;
    alignment: string;
    customizeHint: Function;
    displayMode: string;
    indentFromAxis: number;
    overlappingBehavior: string;
    rotationAngle: number;
    staggeringSpacing: number;
    textOverflow: string;
    wordWrap: string;
    argumentFormat: DevExpress.ui.format | string;
    backgroundColor: string;
    border: {
        color?: string;
        dashStyle?: string;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        visible?: boolean;
        width?: number;
    };
    connector: {
        color?: string;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    horizontalOffset: number;
    showForZeroValues: boolean;
    verticalOffset: number;
    hideFirstOrLast: string;
    indentFromTick: number;
    useRangeColors: boolean;
    location: string;
    showColon: boolean;
    radialOffset: number;
    topIndent: number;
    shadow: {
        blur?: number;
        color?: string;
        offsetX?: number;
        offsetY?: number;
        opacity?: number;
    };
    useNodeColors: boolean;
    dataField: string;
    enabled: boolean;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoLabelComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoLabelComponent, "dxo-label", never, { "connectorColor": "connectorColor"; "connectorWidth": "connectorWidth"; "customizeText": "customizeText"; "font": "font"; "format": "format"; "indent": "indent"; "visible": "visible"; "horizontalAlignment": "horizontalAlignment"; "position": "position"; "text": "text"; "verticalAlignment": "verticalAlignment"; "alignment": "alignment"; "customizeHint": "customizeHint"; "displayMode": "displayMode"; "indentFromAxis": "indentFromAxis"; "overlappingBehavior": "overlappingBehavior"; "rotationAngle": "rotationAngle"; "staggeringSpacing": "staggeringSpacing"; "textOverflow": "textOverflow"; "wordWrap": "wordWrap"; "argumentFormat": "argumentFormat"; "backgroundColor": "backgroundColor"; "border": "border"; "connector": "connector"; "horizontalOffset": "horizontalOffset"; "showForZeroValues": "showForZeroValues"; "verticalOffset": "verticalOffset"; "hideFirstOrLast": "hideFirstOrLast"; "indentFromTick": "indentFromTick"; "useRangeColors": "useRangeColors"; "location": "location"; "showColon": "showColon"; "radialOffset": "radialOffset"; "topIndent": "topIndent"; "shadow": "shadow"; "useNodeColors": "useNodeColors"; "dataField": "dataField"; "enabled": "enabled"; }, {}, never, never>;
}
export declare class DxoLabelModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoLabelModule, [typeof DxoLabelComponent], never, [typeof DxoLabelComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoLabelModule>;
}

//# sourceMappingURL=label.d.ts.map