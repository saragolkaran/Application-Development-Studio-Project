/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, EventEmitter, QueryList } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxoPopupOptions } from './base/popup-options';
import { DxiToolbarItemComponent } from './toolbar-item-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxoPopupComponent extends DxoPopupOptions implements OnDestroy, OnInit {
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    heightChange: EventEmitter<number | Function | string>;
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    positionChange: EventEmitter<DevExpress.positionConfig | Function | string>;
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    visibleChange: EventEmitter<boolean>;
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    widthChange: EventEmitter<number | Function | string>;
    protected readonly _optionPath: string;
    toolbarItemsChildren: QueryList<DxiToolbarItemComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoPopupComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoPopupComponent, "dxo-popup", never, { "accessKey": "accessKey"; "animation": "animation"; "closeOnOutsideClick": "closeOnOutsideClick"; "container": "container"; "contentTemplate": "contentTemplate"; "deferRendering": "deferRendering"; "disabled": "disabled"; "dragEnabled": "dragEnabled"; "elementAttr": "elementAttr"; "focusStateEnabled": "focusStateEnabled"; "fullScreen": "fullScreen"; "height": "height"; "hint": "hint"; "hoverStateEnabled": "hoverStateEnabled"; "maxHeight": "maxHeight"; "maxWidth": "maxWidth"; "minHeight": "minHeight"; "minWidth": "minWidth"; "onContentReady": "onContentReady"; "onDisposing": "onDisposing"; "onHidden": "onHidden"; "onHiding": "onHiding"; "onInitialized": "onInitialized"; "onOptionChanged": "onOptionChanged"; "onResize": "onResize"; "onResizeEnd": "onResizeEnd"; "onResizeStart": "onResizeStart"; "onShowing": "onShowing"; "onShown": "onShown"; "onTitleRendered": "onTitleRendered"; "position": "position"; "resizeEnabled": "resizeEnabled"; "rtlEnabled": "rtlEnabled"; "shading": "shading"; "shadingColor": "shadingColor"; "showCloseButton": "showCloseButton"; "showTitle": "showTitle"; "tabIndex": "tabIndex"; "title": "title"; "titleTemplate": "titleTemplate"; "toolbarItems": "toolbarItems"; "visible": "visible"; "width": "width"; }, { "heightChange": "heightChange"; "positionChange": "positionChange"; "visibleChange": "visibleChange"; "widthChange": "widthChange"; }, ["toolbarItemsChildren"], never>;
}
export declare class DxoPopupModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoPopupModule, [typeof DxoPopupComponent], never, [typeof DxoPopupComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoPopupModule>;
}

//# sourceMappingURL=popup.d.ts.map