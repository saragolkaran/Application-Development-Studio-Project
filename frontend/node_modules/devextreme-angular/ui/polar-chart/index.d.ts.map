{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxPolarChart from 'devextreme/viz/polar_chart';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiAnnotationComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesComponent } from 'devextreme-angular/ui/nested';\r\n/**\r\n * The PolarChart is a widget that visualizes data in a polar coordinate system.\r\n */\r\nexport declare class DxPolarChartComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxPolarChart;\r\n    /**\r\n     * Specifies adaptive layout options.\r\n     */\r\n    adaptiveLayout: {\r\n        height?: number;\r\n        keepLabels?: boolean;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Specifies animation options.\r\n     */\r\n    animation: boolean | {\r\n        duration?: number;\r\n        easing?: string;\r\n        enabled?: boolean;\r\n        maxPointCountSupported?: number;\r\n    };\r\n    /**\r\n     * Specifies the annotation collection.\r\n     */\r\n    annotations: Array<DevExpress.viz.dxPolarChartAnnotationConfig | any>;\r\n    /**\r\n     * Specifies argument axis options for the PolarChart widget.\r\n     */\r\n    argumentAxis: {\r\n        allowDecimals?: boolean;\r\n        argumentType?: string;\r\n        axisDivisionFactor?: number;\r\n        categories?: Array<number | string | Date>;\r\n        color?: string;\r\n        constantLines?: Array<any | {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            displayBehindSeries?: boolean;\r\n            extendAxis?: boolean;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n                visible?: boolean;\r\n            };\r\n            value?: Date | number | string;\r\n            width?: number;\r\n        }>;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        firstPointOnStartAngle?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        hoverMode?: string;\r\n        inverted?: boolean;\r\n        label?: {\r\n            customizeHint?: Function;\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            shift?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        opacity?: number;\r\n        originValue?: number;\r\n        period?: number;\r\n        startAngle?: number;\r\n        strips?: Array<any | {\r\n            color?: string;\r\n            endValue?: Date | number | string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n            };\r\n            startValue?: Date | number | string;\r\n        }>;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            shift?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        visible?: boolean;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Controls the padding and consequently the angular width of a group of bars with the same argument using relative units. Ignored if the barGroupWidth option is set.\r\n     */\r\n    barGroupPadding: number;\r\n    /**\r\n     * Specifies a fixed angular width for groups of bars with the same argument, measured in degrees. Takes precedence over the barGroupPadding option.\r\n     */\r\n    barGroupWidth: number;\r\n    /**\r\n     * Use CommonPolarChartSeries.barPadding instead.\r\n     */\r\n    barWidth: number;\r\n    /**\r\n     * Specifies settings common for all annotations in the PolarChart.\r\n     */\r\n    commonAnnotationSettings: DevExpress.viz.dxPolarChartCommonAnnotationConfig;\r\n    /**\r\n     * An object defining the configuration options that are common for all axes of the PolarChart widget.\r\n     */\r\n    commonAxisSettings: {\r\n        allowDecimals?: boolean;\r\n        color?: string;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        inverted?: boolean;\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        opacity?: number;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        visible?: boolean;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * An object defining the configuration options that are common for all series of the PolarChart widget.\r\n     */\r\n    commonSeriesSettings: any;\r\n    /**\r\n     * Specifies the color of the parent page element.\r\n     */\r\n    containerBackgroundColor: string;\r\n    /**\r\n     * Customizes an individual annotation.\r\n     */\r\n    customizeAnnotation: Function;\r\n    /**\r\n     * Customizes the appearance of an individual point label.\r\n     */\r\n    customizeLabel: Function;\r\n    /**\r\n     * Customizes the appearance of an individual series point.\r\n     */\r\n    customizePoint: Function;\r\n    /**\r\n     * An object providing options for managing data from a data source.\r\n     */\r\n    dataPrepareSettings: {\r\n        checkTypeForAllData?: boolean;\r\n        convertToAxisDataType?: boolean;\r\n        sortingMethod?: boolean | Function;\r\n    };\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Use CommonPolarChartSeries.ignoreEmptyPoints instead.\r\n     */\r\n    equalBarWidth: boolean;\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    export: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    };\r\n    /**\r\n     * Specifies the options of a chart's legend.\r\n     */\r\n    legend: {\r\n        backgroundColor?: string;\r\n        border?: {\r\n            color?: string;\r\n            cornerRadius?: number;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        columnCount?: number;\r\n        columnItemSpacing?: number;\r\n        customizeHint?: Function;\r\n        customizeItems?: Function;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        hoverMode?: string;\r\n        itemsAlignment?: string;\r\n        itemTextPosition?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        markerSize?: number;\r\n        markerTemplate?: any;\r\n        orientation?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        rowCount?: number;\r\n        rowItemSpacing?: number;\r\n        title?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            horizontalAlignment?: string;\r\n            margin?: {\r\n                bottom?: number;\r\n                left?: number;\r\n                right?: number;\r\n                top?: number;\r\n            };\r\n            placeholderSize?: number;\r\n            subtitle?: string | {\r\n                font?: DevExpress.viz.Font;\r\n                offset?: number;\r\n                text?: string;\r\n            };\r\n            text?: string;\r\n            verticalAlignment?: string;\r\n        };\r\n        verticalAlignment?: string;\r\n        visible?: boolean;\r\n    };\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    loadingIndicator: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    };\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    margin: {\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    };\r\n    /**\r\n     * Forces the widget to treat negative values as zeroes. Applies to stacked-like series only.\r\n     */\r\n    negativesAsZeroes: boolean;\r\n    /**\r\n     * Sets the palette to be used for colorizing series and their elements.\r\n     */\r\n    palette: string | Array<string>;\r\n    /**\r\n     * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart widget) or points in a series (in the PieChart widget).\r\n     */\r\n    paletteExtensionMode: string;\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Specifies whether a single point or multiple points can be selected in the chart.\r\n     */\r\n    pointSelectionMode: string;\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    redrawOnResize: boolean;\r\n    /**\r\n     * Specifies how the chart must behave when series point labels overlap.\r\n     */\r\n    resolveLabelOverlapping: string;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies options for PolarChart widget series.\r\n     */\r\n    series: any | Array<any>;\r\n    /**\r\n     * Specifies whether a single series or multiple series can be selected in the chart.\r\n     */\r\n    seriesSelectionMode: string;\r\n    /**\r\n     * Defines options for the series template.\r\n     */\r\n    seriesTemplate: {\r\n        customizeSeries?: Function;\r\n        nameField?: string;\r\n    };\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    title: string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    };\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    tooltip: {\r\n        argumentFormat?: DevExpress.ui.format | string;\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        shared?: boolean;\r\n        zIndex?: number;\r\n    };\r\n    /**\r\n     * Indicates whether or not to display a \"spider web\".\r\n     */\r\n    useSpiderWeb: boolean;\r\n    /**\r\n     * Specifies value axis options for the PolarChart widget.\r\n     */\r\n    valueAxis: {\r\n        allowDecimals?: boolean;\r\n        axisDivisionFactor?: number;\r\n        categories?: Array<number | string | Date>;\r\n        color?: string;\r\n        constantLines?: Array<any | {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            displayBehindSeries?: boolean;\r\n            extendAxis?: boolean;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n                visible?: boolean;\r\n            };\r\n            value?: Date | number | string;\r\n            width?: number;\r\n        }>;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        inverted?: boolean;\r\n        label?: {\r\n            customizeHint?: Function;\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        maxValueMargin?: number;\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minValueMargin?: number;\r\n        minVisualRangeLength?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        opacity?: number;\r\n        showZero?: boolean;\r\n        strips?: Array<any | {\r\n            color?: string;\r\n            endValue?: Date | number | string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n            };\r\n            startValue?: Date | number | string;\r\n        }>;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        valueMarginsEnabled?: boolean;\r\n        valueType?: string;\r\n        visible?: boolean;\r\n        visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>;\r\n        visualRangeUpdateMode?: string;\r\n        wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * A function that is executed when a label on the argument axis is clicked or tapped.\r\n     */\r\n    onArgumentAxisClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when all series are ready.\r\n     */\r\n    onDone: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a legend item is clicked or tapped.\r\n     */\r\n    onLegendClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a series point is clicked or tapped.\r\n     */\r\n    onPointClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series point.\r\n     */\r\n    onPointHoverChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a series point is selected or selection is canceled.\r\n     */\r\n    onPointSelectionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a series is clicked or tapped.\r\n     */\r\n    onSeriesClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series.\r\n     */\r\n    onSeriesHoverChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a series is selected or selection is canceled.\r\n     */\r\n    onSeriesSelectionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    onTooltipHidden: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    onTooltipShown: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when zooming or panning ends.\r\n     */\r\n    onZoomEnd: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when zooming or panning begins.\r\n     */\r\n    onZoomStart: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    adaptiveLayoutChange: EventEmitter<{\r\n        height?: number;\r\n        keepLabels?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    animationChange: EventEmitter<boolean | {\r\n        duration?: number;\r\n        easing?: string;\r\n        enabled?: boolean;\r\n        maxPointCountSupported?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    annotationsChange: EventEmitter<Array<DevExpress.viz.dxPolarChartAnnotationConfig | any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    argumentAxisChange: EventEmitter<{\r\n        allowDecimals?: boolean;\r\n        argumentType?: string;\r\n        axisDivisionFactor?: number;\r\n        categories?: Array<number | string | Date>;\r\n        color?: string;\r\n        constantLines?: Array<any | {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            displayBehindSeries?: boolean;\r\n            extendAxis?: boolean;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n                visible?: boolean;\r\n            };\r\n            value?: Date | number | string;\r\n            width?: number;\r\n        }>;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        firstPointOnStartAngle?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        hoverMode?: string;\r\n        inverted?: boolean;\r\n        label?: {\r\n            customizeHint?: Function;\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            shift?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        opacity?: number;\r\n        originValue?: number;\r\n        period?: number;\r\n        startAngle?: number;\r\n        strips?: Array<any | {\r\n            color?: string;\r\n            endValue?: Date | number | string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n            };\r\n            startValue?: Date | number | string;\r\n        }>;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            shift?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        visible?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    barGroupPaddingChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    barGroupWidthChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    barWidthChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    commonAnnotationSettingsChange: EventEmitter<DevExpress.viz.dxPolarChartCommonAnnotationConfig>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    commonAxisSettingsChange: EventEmitter<{\r\n        allowDecimals?: boolean;\r\n        color?: string;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        inverted?: boolean;\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        opacity?: number;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        visible?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    commonSeriesSettingsChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    containerBackgroundColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    customizeAnnotationChange: EventEmitter<Function>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    customizeLabelChange: EventEmitter<Function>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    customizePointChange: EventEmitter<Function>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataPrepareSettingsChange: EventEmitter<{\r\n        checkTypeForAllData?: boolean;\r\n        convertToAxisDataType?: boolean;\r\n        sortingMethod?: boolean | Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    equalBarWidthChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    exportChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    legendChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        border?: {\r\n            color?: string;\r\n            cornerRadius?: number;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        columnCount?: number;\r\n        columnItemSpacing?: number;\r\n        customizeHint?: Function;\r\n        customizeItems?: Function;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        hoverMode?: string;\r\n        itemsAlignment?: string;\r\n        itemTextPosition?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        markerSize?: number;\r\n        markerTemplate?: any;\r\n        orientation?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        rowCount?: number;\r\n        rowItemSpacing?: number;\r\n        title?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            horizontalAlignment?: string;\r\n            margin?: {\r\n                bottom?: number;\r\n                left?: number;\r\n                right?: number;\r\n                top?: number;\r\n            };\r\n            placeholderSize?: number;\r\n            subtitle?: string | {\r\n                font?: DevExpress.viz.Font;\r\n                offset?: number;\r\n                text?: string;\r\n            };\r\n            text?: string;\r\n            verticalAlignment?: string;\r\n        };\r\n        verticalAlignment?: string;\r\n        visible?: boolean;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    loadingIndicatorChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    marginChange: EventEmitter<{\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    negativesAsZeroesChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    paletteChange: EventEmitter<string | Array<string>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    paletteExtensionModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pointSelectionModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    redrawOnResizeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    resolveLabelOverlappingChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    seriesChange: EventEmitter<any | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    seriesSelectionModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    seriesTemplateChange: EventEmitter<{\r\n        customizeSeries?: Function;\r\n        nameField?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    titleChange: EventEmitter<string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tooltipChange: EventEmitter<{\r\n        argumentFormat?: DevExpress.ui.format | string;\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        shared?: boolean;\r\n        zIndex?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    useSpiderWebChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    valueAxisChange: EventEmitter<{\r\n        allowDecimals?: boolean;\r\n        axisDivisionFactor?: number;\r\n        categories?: Array<number | string | Date>;\r\n        color?: string;\r\n        constantLines?: Array<any | {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            displayBehindSeries?: boolean;\r\n            extendAxis?: boolean;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n                visible?: boolean;\r\n            };\r\n            value?: Date | number | string;\r\n            width?: number;\r\n        }>;\r\n        constantLineStyle?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                visible?: boolean;\r\n            };\r\n            width?: number;\r\n        };\r\n        discreteAxisDivisionMode?: string;\r\n        endOnTick?: boolean;\r\n        grid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        inverted?: boolean;\r\n        label?: {\r\n            customizeHint?: Function;\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            indentFromAxis?: number;\r\n            overlappingBehavior?: string;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        maxValueMargin?: number;\r\n        minorGrid?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minValueMargin?: number;\r\n        minVisualRangeLength?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        opacity?: number;\r\n        showZero?: boolean;\r\n        strips?: Array<any | {\r\n            color?: string;\r\n            endValue?: Date | number | string;\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n                text?: string;\r\n            };\r\n            startValue?: Date | number | string;\r\n        }>;\r\n        stripStyle?: {\r\n            label?: {\r\n                font?: DevExpress.viz.Font;\r\n            };\r\n        };\r\n        tick?: {\r\n            color?: string;\r\n            length?: number;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        valueMarginsEnabled?: boolean;\r\n        valueType?: string;\r\n        visible?: boolean;\r\n        visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>;\r\n        visualRangeUpdateMode?: string;\r\n        wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>;\r\n        width?: number;\r\n    }>;\r\n    annotationsChildren: QueryList<DxiAnnotationComponent>;\r\n    seriesChildren: QueryList<DxiSeriesComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxPolarChart;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxPolarChartModule {\r\n}\r\n"]}