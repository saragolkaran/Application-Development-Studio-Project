{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxTreeMap from 'devextreme/viz/tree_map';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The TreeMap is a widget that displays hierarchical data by using nested rectangles.\r\n */\r\nexport declare class DxTreeMapComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxTreeMap;\r\n    /**\r\n     * Specifies the name of the data source field that provides nested items for a group. Applies to hierarchical data sources only.\r\n     */\r\n    childrenField: string;\r\n    /**\r\n     * Specifies the name of the data source field that provides colors for tiles.\r\n     */\r\n    colorField: string;\r\n    /**\r\n     * Manages the color settings.\r\n     */\r\n    colorizer: {\r\n        colorCodeField?: string;\r\n        colorizeGroups?: boolean;\r\n        palette?: string | Array<string>;\r\n        paletteExtensionMode?: string;\r\n        range?: Array<number>;\r\n        type?: string;\r\n    };\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    export: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    };\r\n    /**\r\n     * Configures groups.\r\n     */\r\n    group: {\r\n        border?: {\r\n            color?: string;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        headerHeight?: number;\r\n        hoverEnabled?: boolean;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            textOverflow?: string;\r\n            visible?: boolean;\r\n        };\r\n        selectionStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n    };\r\n    /**\r\n     * Specifies whether tiles and groups change their style when a user pauses on them.\r\n     */\r\n    hoverEnabled: boolean;\r\n    /**\r\n     * Specifies the name of the data source field that provides IDs for items. Applies to plain data sources only.\r\n     */\r\n    idField: string;\r\n    /**\r\n     * Specifies whether the user will interact with a single tile or its group.\r\n     */\r\n    interactWithGroup: boolean;\r\n    /**\r\n     * Specifies the name of the data source field that provides texts for tile and group labels.\r\n     */\r\n    labelField: string;\r\n    /**\r\n     * Specifies the layout algorithm.\r\n     */\r\n    layoutAlgorithm: Function | string;\r\n    /**\r\n     * Specifies the direction in which the items will be laid out.\r\n     */\r\n    layoutDirection: string;\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    loadingIndicator: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    };\r\n    /**\r\n     * Specifies how many hierarchical levels must be visualized.\r\n     */\r\n    maxDepth: number;\r\n    /**\r\n     * Specifies the name of the data source field that provides parent IDs for items. Applies to plain data sources only.\r\n     */\r\n    parentField: string;\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    redrawOnResize: boolean;\r\n    /**\r\n     * Use the tile.label.textOverflow option instead.\r\n     */\r\n    resolveLabelOverflow: string;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies whether a single or multiple nodes can be in the selected state simultaneously.\r\n     */\r\n    selectionMode: string;\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures tiles.\r\n     */\r\n    tile: {\r\n        border?: {\r\n            color?: string;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            textOverflow?: string;\r\n            visible?: boolean;\r\n            wordWrap?: string;\r\n        };\r\n        selectionStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n    };\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    title: string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    };\r\n    /**\r\n     * Configures tooltips - small pop-up rectangles that display information about a data-visualizing widget element being pressed or hovered over with the mouse pointer.\r\n     */\r\n    tooltip: {\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    };\r\n    /**\r\n     * Specifies the name of the data source field that provides values for tiles.\r\n     */\r\n    valueField: string;\r\n    /**\r\n     * A function that is executed when a node is clicked or tapped.\r\n     */\r\n    onClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a user drills up or down.\r\n     */\r\n    onDrill: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a node.\r\n     */\r\n    onHoverChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed only once, after the nodes are initialized.\r\n     */\r\n    onNodesInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the nodes are displayed and each time the collection of active nodes is changed.\r\n     */\r\n    onNodesRendering: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a node is selected or selection is canceled.\r\n     */\r\n    onSelectionChanged: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    childrenFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    colorFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    colorizerChange: EventEmitter<{\r\n        colorCodeField?: string;\r\n        colorizeGroups?: boolean;\r\n        palette?: string | Array<string>;\r\n        paletteExtensionMode?: string;\r\n        range?: Array<number>;\r\n        type?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    exportChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    groupChange: EventEmitter<{\r\n        border?: {\r\n            color?: string;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        headerHeight?: number;\r\n        hoverEnabled?: boolean;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            textOverflow?: string;\r\n            visible?: boolean;\r\n        };\r\n        selectionStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    hoverEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    idFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    interactWithGroupChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    labelFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    layoutAlgorithmChange: EventEmitter<Function | string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    layoutDirectionChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    loadingIndicatorChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    maxDepthChange: EventEmitter<number>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    parentFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    redrawOnResizeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    resolveLabelOverflowChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    selectionModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tileChange: EventEmitter<{\r\n        border?: {\r\n            color?: string;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n        label?: {\r\n            font?: DevExpress.viz.Font;\r\n            textOverflow?: string;\r\n            visible?: boolean;\r\n            wordWrap?: string;\r\n        };\r\n        selectionStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n        };\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    titleChange: EventEmitter<string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tooltipChange: EventEmitter<{\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        contentTemplate?: any;\r\n        cornerRadius?: number;\r\n        customizeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    valueFieldChange: EventEmitter<string>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxTreeMap;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxTreeMapModule {\r\n}\r\n"]}