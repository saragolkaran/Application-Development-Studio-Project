{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxRangeSelector from 'devextreme/viz/range_selector';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The RangeSelector is a widget that allows a user to select a range of values on a scale.\r\n */\r\nexport declare class DxRangeSelectorComponent extends DxComponent implements OnDestroy, ControlValueAccessor, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxRangeSelector;\r\n    /**\r\n     * Specifies the options for the range selector's background.\r\n     */\r\n    background: {\r\n        color?: string;\r\n        image?: {\r\n            location?: string;\r\n            url?: string;\r\n        };\r\n        visible?: boolean;\r\n    };\r\n    /**\r\n     * Specifies the RangeSelector's behavior options.\r\n     */\r\n    behavior: {\r\n        allowSlidersSwap?: boolean;\r\n        animationEnabled?: boolean;\r\n        callValueChanged?: string;\r\n        manualRangeSelectionEnabled?: boolean;\r\n        moveSelectedRangeByClick?: boolean;\r\n        snapToTicks?: boolean;\r\n    };\r\n    /**\r\n     * Specifies the options required to display a chart as the range selector's background.\r\n     */\r\n    chart: {\r\n        barGroupPadding?: number;\r\n        barGroupWidth?: number;\r\n        barWidth?: number;\r\n        bottomIndent?: number;\r\n        commonSeriesSettings?: any;\r\n        dataPrepareSettings?: {\r\n            checkTypeForAllData?: boolean;\r\n            convertToAxisDataType?: boolean;\r\n            sortingMethod?: boolean | Function;\r\n        };\r\n        equalBarWidth?: boolean;\r\n        maxBubbleSize?: number;\r\n        minBubbleSize?: number;\r\n        negativesAsZeroes?: boolean;\r\n        palette?: string | Array<string>;\r\n        paletteExtensionMode?: string;\r\n        series?: any | Array<any>;\r\n        seriesTemplate?: {\r\n            customizeSeries?: Function;\r\n            nameField?: string;\r\n        };\r\n        topIndent?: number;\r\n        useAggregation?: boolean;\r\n        valueAxis?: {\r\n            inverted?: boolean;\r\n            logarithmBase?: number;\r\n            max?: number;\r\n            min?: number;\r\n            type?: string;\r\n            valueType?: string;\r\n        };\r\n    };\r\n    /**\r\n     * Specifies the color of the parent page element.\r\n     */\r\n    containerBackgroundColor: string;\r\n    /**\r\n     * Specifies a data source for the scale values and for the chart at the background.\r\n     */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /**\r\n     * Specifies the data source field that provides data for the scale.\r\n     */\r\n    dataSourceField: string;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    export: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    };\r\n    /**\r\n     * Range selector's indent options.\r\n     */\r\n    indent: {\r\n        left?: number;\r\n        right?: number;\r\n    };\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    loadingIndicator: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    };\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    margin: {\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    };\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    redrawOnResize: boolean;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies options of the range selector's scale.\r\n     */\r\n    scale: {\r\n        aggregateByCategory?: boolean;\r\n        aggregationGroupWidth?: number;\r\n        aggregationInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        allowDecimals?: boolean;\r\n        breaks?: Array<DevExpress.viz.ScaleBreak>;\r\n        breakStyle?: {\r\n            color?: string;\r\n            line?: string;\r\n            width?: number;\r\n        };\r\n        categories?: Array<number | string | Date>;\r\n        endOnTick?: boolean;\r\n        endValue?: Date | number | string;\r\n        holidays?: Array<Date | string | number>;\r\n        label?: {\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            overlappingBehavior?: string;\r\n            topIndent?: number;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        marker?: {\r\n            label?: {\r\n                customizeText?: Function;\r\n                format?: DevExpress.ui.format | string;\r\n            };\r\n            separatorHeight?: number;\r\n            textLeftIndent?: number;\r\n            textTopIndent?: number;\r\n            topIndent?: number;\r\n            visible?: boolean;\r\n        };\r\n        maxRange?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minRange?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        placeholderHeight?: number;\r\n        showCustomBoundaryTicks?: boolean;\r\n        singleWorkdays?: Array<Date | string | number>;\r\n        startValue?: Date | number | string;\r\n        tick?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        valueType?: string;\r\n        workdaysOnly?: boolean;\r\n        workWeek?: Array<number>;\r\n    };\r\n    /**\r\n     * Specifies the color of the selected range.\r\n     */\r\n    selectedRangeColor: string;\r\n    /**\r\n     * Specifies how the selected range should behave when data is updated. Applies only when the RangeSelector is bound to a data source.\r\n     */\r\n    selectedRangeUpdateMode: string;\r\n    /**\r\n     * Specifies range selector shutter options.\r\n     */\r\n    shutter: {\r\n        color?: string;\r\n        opacity?: number;\r\n    };\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Specifies the appearance of the range selector's slider handles.\r\n     */\r\n    sliderHandle: {\r\n        color?: string;\r\n        opacity?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Defines the options of the range selector slider markers.\r\n     */\r\n    sliderMarker: {\r\n        color?: string;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        invalidRangeColor?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        placeholderHeight?: number;\r\n        visible?: boolean;\r\n    };\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    title: string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    };\r\n    /**\r\n     * The selected range (initial or current). Equals the entire scale when not set.\r\n     */\r\n    value: DevExpress.viz.VizRange | Array<number | string | Date>;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget's value is changed.\r\n     */\r\n    onValueChanged: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    backgroundChange: EventEmitter<{\r\n        color?: string;\r\n        image?: {\r\n            location?: string;\r\n            url?: string;\r\n        };\r\n        visible?: boolean;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    behaviorChange: EventEmitter<{\r\n        allowSlidersSwap?: boolean;\r\n        animationEnabled?: boolean;\r\n        callValueChanged?: string;\r\n        manualRangeSelectionEnabled?: boolean;\r\n        moveSelectedRangeByClick?: boolean;\r\n        snapToTicks?: boolean;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    chartChange: EventEmitter<{\r\n        barGroupPadding?: number;\r\n        barGroupWidth?: number;\r\n        barWidth?: number;\r\n        bottomIndent?: number;\r\n        commonSeriesSettings?: any;\r\n        dataPrepareSettings?: {\r\n            checkTypeForAllData?: boolean;\r\n            convertToAxisDataType?: boolean;\r\n            sortingMethod?: boolean | Function;\r\n        };\r\n        equalBarWidth?: boolean;\r\n        maxBubbleSize?: number;\r\n        minBubbleSize?: number;\r\n        negativesAsZeroes?: boolean;\r\n        palette?: string | Array<string>;\r\n        paletteExtensionMode?: string;\r\n        series?: any | Array<any>;\r\n        seriesTemplate?: {\r\n            customizeSeries?: Function;\r\n            nameField?: string;\r\n        };\r\n        topIndent?: number;\r\n        useAggregation?: boolean;\r\n        valueAxis?: {\r\n            inverted?: boolean;\r\n            logarithmBase?: number;\r\n            max?: number;\r\n            min?: number;\r\n            type?: string;\r\n            valueType?: string;\r\n        };\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    containerBackgroundColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    exportChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    indentChange: EventEmitter<{\r\n        left?: number;\r\n        right?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    loadingIndicatorChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    marginChange: EventEmitter<{\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    redrawOnResizeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    scaleChange: EventEmitter<{\r\n        aggregateByCategory?: boolean;\r\n        aggregationGroupWidth?: number;\r\n        aggregationInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        allowDecimals?: boolean;\r\n        breaks?: Array<DevExpress.viz.ScaleBreak>;\r\n        breakStyle?: {\r\n            color?: string;\r\n            line?: string;\r\n            width?: number;\r\n        };\r\n        categories?: Array<number | string | Date>;\r\n        endOnTick?: boolean;\r\n        endValue?: Date | number | string;\r\n        holidays?: Array<Date | string | number>;\r\n        label?: {\r\n            customizeText?: Function;\r\n            font?: DevExpress.viz.Font;\r\n            format?: DevExpress.ui.format | string;\r\n            overlappingBehavior?: string;\r\n            topIndent?: number;\r\n            visible?: boolean;\r\n        };\r\n        linearThreshold?: number;\r\n        logarithmBase?: number;\r\n        marker?: {\r\n            label?: {\r\n                customizeText?: Function;\r\n                format?: DevExpress.ui.format | string;\r\n            };\r\n            separatorHeight?: number;\r\n            textLeftIndent?: number;\r\n            textTopIndent?: number;\r\n            topIndent?: number;\r\n            visible?: boolean;\r\n        };\r\n        maxRange?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minorTick?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        minorTickCount?: number;\r\n        minorTickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        minRange?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        placeholderHeight?: number;\r\n        showCustomBoundaryTicks?: boolean;\r\n        singleWorkdays?: Array<Date | string | number>;\r\n        startValue?: Date | number | string;\r\n        tick?: {\r\n            color?: string;\r\n            opacity?: number;\r\n            width?: number;\r\n        };\r\n        tickInterval?: number | string | {\r\n            days?: number;\r\n            hours?: number;\r\n            milliseconds?: number;\r\n            minutes?: number;\r\n            months?: number;\r\n            quarters?: number;\r\n            seconds?: number;\r\n            weeks?: number;\r\n            years?: number;\r\n        };\r\n        type?: string;\r\n        valueType?: string;\r\n        workdaysOnly?: boolean;\r\n        workWeek?: Array<number>;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    selectedRangeColorChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    selectedRangeUpdateModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    shutterChange: EventEmitter<{\r\n        color?: string;\r\n        opacity?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sliderHandleChange: EventEmitter<{\r\n        color?: string;\r\n        opacity?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sliderMarkerChange: EventEmitter<{\r\n        color?: string;\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        invalidRangeColor?: string;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        placeholderHeight?: number;\r\n        visible?: boolean;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    titleChange: EventEmitter<string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    valueChange: EventEmitter<DevExpress.viz.VizRange | Array<number | string | Date>>;\r\n    onBlur: EventEmitter<any>;\r\n    change(_: any): void;\r\n    touched: (_: any) => void;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxRangeSelector;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (_: any) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    _createWidget(element: any): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxRangeSelectorModule {\r\n}\r\n"]}