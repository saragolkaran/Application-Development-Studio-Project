{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxSankey from 'devextreme/viz/sankey';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The Sankey is a widget that visualizes the flow magnitude between value sets. The values being connected are called nodes; the connections - links. The higher the flow magnitude, the wider the link is.\r\n */\r\nexport declare class DxSankeyComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxSankey;\r\n    /**\r\n     * Specifies adaptive layout options.\r\n     */\r\n    adaptiveLayout: {\r\n        height?: number;\r\n        keepLabels?: boolean;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Aligns node columns vertically.\r\n     */\r\n    alignment: string | Array<string>;\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    dataSource: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    export: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    };\r\n    /**\r\n     * Specifies whether nodes and links change their style when they are hovered over or pressed.\r\n     */\r\n    hoverEnabled: boolean;\r\n    /**\r\n     * Configures sankey nodes' labels.\r\n     */\r\n    label: {\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalOffset?: number;\r\n        overlappingBehavior?: string;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        useNodeColors?: boolean;\r\n        verticalOffset?: number;\r\n        visible?: boolean;\r\n    };\r\n    /**\r\n     * Configures sankey links' appearance.\r\n     */\r\n    link: {\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        colorMode?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                visible?: boolean;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n            hatching?: {\r\n                direction?: string;\r\n                opacity?: number;\r\n                step?: number;\r\n                width?: number;\r\n            };\r\n            opacity?: number;\r\n        };\r\n        opacity?: number;\r\n    };\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    loadingIndicator: {\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    };\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    margin: {\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    };\r\n    /**\r\n     * Configures sankey nodes' appearance.\r\n     */\r\n    node: {\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                visible?: boolean;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n            hatching?: {\r\n                direction?: string;\r\n                opacity?: number;\r\n                step?: number;\r\n                width?: number;\r\n            };\r\n            opacity?: number;\r\n        };\r\n        opacity?: number;\r\n        padding?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Sets the palette to be used to colorize sankey nodes.\r\n     */\r\n    palette: string | Array<string>;\r\n    /**\r\n     * Specifies how to extend the palette when it contains less colors than the number of sankey nodes.\r\n     */\r\n    paletteExtensionMode: string;\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    pathModified: boolean;\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    redrawOnResize: boolean;\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    size: {\r\n        height?: number;\r\n        width?: number;\r\n    };\r\n    /**\r\n     * Specifies nodes' sorting order in their columns.\r\n     */\r\n    sortData: any;\r\n    /**\r\n     * Specifies which data source field provides links' source nodes.\r\n     */\r\n    sourceField: string;\r\n    /**\r\n     * Specifies which data source field provides links' target nodes.\r\n     */\r\n    targetField: string;\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    title: string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    };\r\n    /**\r\n     * Configures tooltips - small pop-up rectangles that display information about a data-visualizing widget element being pressed or hovered over with the mouse pointer.\r\n     */\r\n    tooltip: {\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        cornerRadius?: number;\r\n        customizeLinkTooltip?: Function;\r\n        customizeNodeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        linkTooltipTemplate?: any;\r\n        nodeTooltipTemplate?: any;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    };\r\n    /**\r\n     * Specifies which data source field provides links' weights.\r\n     */\r\n    weightField: string;\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    onDrawn: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    onExported: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    onExporting: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    onFileSaving: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    onIncidentOccurred: EventEmitter<any>;\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a sankey link is clicked or tapped.\r\n     */\r\n    onLinkClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a sankey link.\r\n     */\r\n    onLinkHoverChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed when a sankey node is clicked or tapped.\r\n     */\r\n    onNodeClick: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a sankey node.\r\n     */\r\n    onNodeHoverChanged: EventEmitter<any>;\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    adaptiveLayoutChange: EventEmitter<{\r\n        height?: number;\r\n        keepLabels?: boolean;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    alignmentChange: EventEmitter<string | Array<string>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    exportChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        fileName?: string;\r\n        formats?: Array<string>;\r\n        margin?: number;\r\n        printingEnabled?: boolean;\r\n        proxyUrl?: string;\r\n        svgToCanvas?: Function;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    hoverEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    labelChange: EventEmitter<{\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        customizeText?: Function;\r\n        font?: DevExpress.viz.Font;\r\n        horizontalOffset?: number;\r\n        overlappingBehavior?: string;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        useNodeColors?: boolean;\r\n        verticalOffset?: number;\r\n        visible?: boolean;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    linkChange: EventEmitter<{\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        colorMode?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                visible?: boolean;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n            hatching?: {\r\n                direction?: string;\r\n                opacity?: number;\r\n                step?: number;\r\n                width?: number;\r\n            };\r\n            opacity?: number;\r\n        };\r\n        opacity?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    loadingIndicatorChange: EventEmitter<{\r\n        backgroundColor?: string;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        show?: boolean;\r\n        text?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    marginChange: EventEmitter<{\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n        top?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    nodeChange: EventEmitter<{\r\n        border?: {\r\n            color?: string;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        hoverStyle?: {\r\n            border?: {\r\n                color?: string;\r\n                visible?: boolean;\r\n                width?: number;\r\n            };\r\n            color?: string;\r\n            hatching?: {\r\n                direction?: string;\r\n                opacity?: number;\r\n                step?: number;\r\n                width?: number;\r\n            };\r\n            opacity?: number;\r\n        };\r\n        opacity?: number;\r\n        padding?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    paletteChange: EventEmitter<string | Array<string>>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    paletteExtensionModeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    pathModifiedChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    redrawOnResizeChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sizeChange: EventEmitter<{\r\n        height?: number;\r\n        width?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sortDataChange: EventEmitter<any>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    sourceFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    targetFieldChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    themeChange: EventEmitter<string>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    titleChange: EventEmitter<string | {\r\n        font?: DevExpress.viz.Font;\r\n        horizontalAlignment?: string;\r\n        margin?: number | {\r\n            bottom?: number;\r\n            left?: number;\r\n            right?: number;\r\n            top?: number;\r\n        };\r\n        placeholderSize?: number;\r\n        subtitle?: string | {\r\n            font?: DevExpress.viz.Font;\r\n            offset?: number;\r\n            text?: string;\r\n            textOverflow?: string;\r\n            wordWrap?: string;\r\n        };\r\n        text?: string;\r\n        textOverflow?: string;\r\n        verticalAlignment?: string;\r\n        wordWrap?: string;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    tooltipChange: EventEmitter<{\r\n        arrowLength?: number;\r\n        border?: {\r\n            color?: string;\r\n            dashStyle?: string;\r\n            opacity?: number;\r\n            visible?: boolean;\r\n            width?: number;\r\n        };\r\n        color?: string;\r\n        container?: Element | JQuery | string;\r\n        cornerRadius?: number;\r\n        customizeLinkTooltip?: Function;\r\n        customizeNodeTooltip?: Function;\r\n        enabled?: boolean;\r\n        font?: DevExpress.viz.Font;\r\n        format?: DevExpress.ui.format | string;\r\n        linkTooltipTemplate?: any;\r\n        nodeTooltipTemplate?: any;\r\n        opacity?: number;\r\n        paddingLeftRight?: number;\r\n        paddingTopBottom?: number;\r\n        shadow?: {\r\n            blur?: number;\r\n            color?: string;\r\n            offsetX?: number;\r\n            offsetY?: number;\r\n            opacity?: number;\r\n        };\r\n        zIndex?: number;\r\n    }>;\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    weightFieldChange: EventEmitter<string>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxSankey;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxSankeyModule {\r\n}\r\n"]}