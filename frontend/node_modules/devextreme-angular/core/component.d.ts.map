{"version":3,"file":"component.d.ts","sources":["component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 20.1.3\r\n * Build date: Fri Apr 24 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { ElementRef, NgZone, QueryList, SimpleChanges, EventEmitter, OnChanges, OnInit, DoCheck, AfterContentChecked, AfterViewInit } from '@angular/core';\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { DxTemplateDirective } from './template';\r\nimport { IDxTemplateHost, DxTemplateHost } from './template-host';\r\nimport { EmitterHelper } from './events-strategy';\r\nimport { WatcherHelper } from './watcher-helper';\r\nimport { INestedOptionContainer, ICollectionNestedOption, ICollectionNestedOptionContainer } from './nested-option';\r\nexport declare const getServerStateKey: () => any;\r\nexport declare abstract class DxComponent implements OnChanges, OnInit, DoCheck, AfterContentChecked, AfterViewInit, INestedOptionContainer, ICollectionNestedOptionContainer, IDxTemplateHost {\r\n    protected element: ElementRef;\r\n    private watcherHelper;\r\n    private transferState;\r\n    private platformId;\r\n    private _initialOptions;\r\n    protected _optionsToUpdate: any;\r\n    private _collectionContainerImpl;\r\n    eventHelper: EmitterHelper;\r\n    optionChangedHandlers: EventEmitter<any>;\r\n    templates: DxTemplateDirective[];\r\n    instance: any;\r\n    isLinked: boolean;\r\n    changedOptions: {};\r\n    removedNestedComponents: any[];\r\n    recreatedNestedComponents: any[];\r\n    widgetUpdateLocked: boolean;\r\n    private _initTemplates;\r\n    private _initEvents;\r\n    private _initOptions;\r\n    private _initPlatform;\r\n    protected _createEventEmitters(events: any): void;\r\n    _shouldOptionChange(name: string, value: any): boolean;\r\n    clearChangedOptions(): void;\r\n    protected _getOption(name: string): any;\r\n    lockWidgetUpdate(): void;\r\n    unlockWidgetUpdate(): void;\r\n    protected _setOption(name: string, value: any): void;\r\n    protected abstract _createInstance(element: any, options: any): any;\r\n    protected _createWidget(element: any): void;\r\n    protected _destroyWidget(): void;\r\n    constructor(element: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, watcherHelper: WatcherHelper, transferState: TransferState, platformId: any);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngDoCheck(): void;\r\n    ngAfterContentChecked(): void;\r\n    ngAfterViewInit(): void;\r\n    applyOptions(): void;\r\n    resetOptions(): void;\r\n    isRecreated(name: string): boolean;\r\n    setTemplate(template: DxTemplateDirective): void;\r\n    setChildren<T extends ICollectionNestedOption>(propertyName: string, items: QueryList<T>): any;\r\n}\r\nexport declare abstract class DxComponentExtension extends DxComponent implements OnInit, AfterViewInit {\r\n    createInstance(element: any): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n}\r\n"]}