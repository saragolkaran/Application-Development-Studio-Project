/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { TemplateRef, ViewContainerRef, Renderer2, NgZone } from '@angular/core';
import { DxTemplateHost } from './template-host';
import * as ɵngcc0 from '@angular/core';
export declare const DX_TEMPLATE_WRAPPER_CLASS = "dx-template-wrapper";
export declare class RenderData {
    model: any;
    index: number;
    container: any;
}
export declare class DxTemplateDirective {
    private templateRef;
    private viewContainerRef;
    private renderer;
    private zone;
    dxTemplateOf: any;
    name: string;
    constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef, templateHost: DxTemplateHost, renderer: Renderer2, zone: NgZone);
    private renderTemplate;
    render(renderData: RenderData): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DxTemplateDirective, "[dxTemplate]", never, { "dxTemplateOf": "dxTemplateOf"; }, {}, never>;
}
export declare class DxTemplateModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxTemplateModule, [typeof DxTemplateDirective], never, [typeof DxTemplateDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxTemplateModule>;
}

//# sourceMappingURL=template.d.ts.map