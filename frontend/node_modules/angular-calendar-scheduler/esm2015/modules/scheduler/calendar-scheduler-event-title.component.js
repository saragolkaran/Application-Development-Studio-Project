import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
let CalendarSchedulerEventTitleComponent = class CalendarSchedulerEventTitleComponent {
    constructor() {
        this.showStatus = true;
        this.showContent = true;
        this.showActions = true;
    }
};
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "view", void 0);
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "event", void 0);
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "showStatus", void 0);
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "showContent", void 0);
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "showActions", void 0);
tslib_1.__decorate([
    Input()
], CalendarSchedulerEventTitleComponent.prototype, "customTemplate", void 0);
CalendarSchedulerEventTitleComponent = tslib_1.__decorate([
    Component({
        selector: 'calendar-scheduler-event-title',
        template: `
        <ng-template #defaultTemplate>
            <div
                class="cal-scheduler-event-title"
                [innerHTML]="event.title | schedulerEventTitle:view:event">
            </div>
            <calendar-scheduler-event-actions
                *ngIf="showActions && !showContent && (event.isClickable || event.isDisabled)"
                class="no-content-actions"
                [event]="event">
            </calendar-scheduler-event-actions>
            <div *ngIf="event.status && showStatus"
                class="cal-scheduler-event-status"
                [class.ok]="event.status === 'ok'"
                [class.warning]="event.status === 'warning'"
                [class.danger]="event.status === 'danger'">
            </div>
        </ng-template>
        <ng-template
            [ngTemplateOutlet]="customTemplate || defaultTemplate"
            [ngTemplateOutletContext]="{
                view: view,
                event: event,
                showStatus: showStatus,
                showContent: showContent,
                showActions: showActions
            }">
        </ng-template>
    `,
        host: {
            'class': 'cal-scheduler-event-title-container'
        }
    })
], CalendarSchedulerEventTitleComponent);
export { CalendarSchedulerEventTitleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2FsZW5kYXItc2NoZWR1bGVyLyIsInNvdXJjZXMiOlsibW9kdWxlcy9zY2hlZHVsZXIvY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUF3QzlELElBQWEsb0NBQW9DLEdBQWpELE1BQWEsb0NBQW9DO0lBbkNqRDtRQXlDYSxlQUFVLEdBQVksSUFBSSxDQUFDO1FBRTNCLGdCQUFXLEdBQVksSUFBSSxDQUFDO1FBRTVCLGdCQUFXLEdBQVksSUFBSSxDQUFDO0lBR3pDLENBQUM7Q0FBQSxDQUFBO0FBWFk7SUFBUixLQUFLLEVBQUU7a0VBQWM7QUFFYjtJQUFSLEtBQUssRUFBRTttRUFBK0I7QUFFOUI7SUFBUixLQUFLLEVBQUU7d0VBQTRCO0FBRTNCO0lBQVIsS0FBSyxFQUFFO3lFQUE2QjtBQUU1QjtJQUFSLEtBQUssRUFBRTt5RUFBNkI7QUFFNUI7SUFBUixLQUFLLEVBQUU7NEVBQWtDO0FBWmpDLG9DQUFvQztJQW5DaEQsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGdDQUFnQztRQUMxQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0E0QlQ7UUFDRCxJQUFJLEVBQUU7WUFDRixPQUFPLEVBQUUscUNBQXFDO1NBQ2pEO0tBQ0osQ0FBQztHQUNXLG9DQUFvQyxDQWFoRDtTQWJZLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgICBDYWxlbmRhclNjaGVkdWxlckV2ZW50XHJcbn0gZnJvbSAnLi9tb2RlbHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2NhbGVuZGFyLXNjaGVkdWxlci1ldmVudC10aXRsZScsXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdFRlbXBsYXRlPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImNhbC1zY2hlZHVsZXItZXZlbnQtdGl0bGVcIlxyXG4gICAgICAgICAgICAgICAgW2lubmVySFRNTF09XCJldmVudC50aXRsZSB8IHNjaGVkdWxlckV2ZW50VGl0bGU6dmlldzpldmVudFwiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGNhbGVuZGFyLXNjaGVkdWxlci1ldmVudC1hY3Rpb25zXHJcbiAgICAgICAgICAgICAgICAqbmdJZj1cInNob3dBY3Rpb25zICYmICFzaG93Q29udGVudCAmJiAoZXZlbnQuaXNDbGlja2FibGUgfHwgZXZlbnQuaXNEaXNhYmxlZClcIlxyXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJuby1jb250ZW50LWFjdGlvbnNcIlxyXG4gICAgICAgICAgICAgICAgW2V2ZW50XT1cImV2ZW50XCI+XHJcbiAgICAgICAgICAgIDwvY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LWFjdGlvbnM+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJldmVudC5zdGF0dXMgJiYgc2hvd1N0YXR1c1wiXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImNhbC1zY2hlZHVsZXItZXZlbnQtc3RhdHVzXCJcclxuICAgICAgICAgICAgICAgIFtjbGFzcy5va109XCJldmVudC5zdGF0dXMgPT09ICdvaydcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLndhcm5pbmddPVwiZXZlbnQuc3RhdHVzID09PSAnd2FybmluZydcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLmRhbmdlcl09XCJldmVudC5zdGF0dXMgPT09ICdkYW5nZXInXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgICAgICAgPG5nLXRlbXBsYXRlXHJcbiAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImN1c3RvbVRlbXBsYXRlIHx8IGRlZmF1bHRUZW1wbGF0ZVwiXHJcbiAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7XHJcbiAgICAgICAgICAgICAgICB2aWV3OiB2aWV3LFxyXG4gICAgICAgICAgICAgICAgZXZlbnQ6IGV2ZW50LFxyXG4gICAgICAgICAgICAgICAgc2hvd1N0YXR1czogc2hvd1N0YXR1cyxcclxuICAgICAgICAgICAgICAgIHNob3dDb250ZW50OiBzaG93Q29udGVudCxcclxuICAgICAgICAgICAgICAgIHNob3dBY3Rpb25zOiBzaG93QWN0aW9uc1xyXG4gICAgICAgICAgICB9XCI+XHJcbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgIGAsXHJcbiAgICBob3N0OiB7XHJcbiAgICAgICAgJ2NsYXNzJzogJ2NhbC1zY2hlZHVsZXItZXZlbnQtdGl0bGUtY29udGFpbmVyJ1xyXG4gICAgfVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJTY2hlZHVsZXJFdmVudFRpdGxlQ29tcG9uZW50IHtcclxuXHJcbiAgICBASW5wdXQoKSB2aWV3OiBzdHJpbmc7XHJcblxyXG4gICAgQElucHV0KCkgZXZlbnQ6IENhbGVuZGFyU2NoZWR1bGVyRXZlbnQ7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd1N0YXR1czogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd0NvbnRlbnQ6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIHNob3dBY3Rpb25zOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgICBASW5wdXQoKSBjdXN0b21UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxufVxyXG4iXX0=