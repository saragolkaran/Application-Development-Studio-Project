{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://angular-calendar-scheduler/modules/scheduler/scheduler-config.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.ts","ng://angular-calendar-scheduler/modules/common/utils.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-view.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-hour-segment.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-header.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-title.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-content.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-actions.component.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-event-title-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/pipes/scheduler-event-title.pipe.ts","ng://angular-calendar-scheduler/modules/scheduler/pipes/calendar-scheduler-date.pipe.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-date-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/scheduler.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","DAYS_OF_WEEK","SchedulerConfig","config","use","source","defaultValue","undefined","locale","headerDateFormat","logEnabled","Injectable","moment","momentImported","DEFAULT_WEEKEND_DAYS","SUNDAY","SATURDAY","DAYS_IN_WEEK","HOURS_IN_DAY","MINUTES_IN_HOUR","DEFAULT_HOUR_SEGMENT_HEIGHT_PX","DEFAULT_EVENT_WIDTH","DEFAULT_HOUR_SEGMENTS","getSchedulerViewHourGrid","dateAdapter","_a","viewDate","hourSegments","dayStart","dayEnd","setMinutes","setHours","startOfDay","startOfMinute","endOfDay","addMinutes","addHours","addDays","hours","startOfView","sanitiseHours","hour","sanitiseMinutes","minute","endOfView","segmentDuration","startOfViewDay","endOfViewDay","dateAdjustment","getTimezoneOffset","segments","j","date","displayDate","isStart","getSchedulerView","_b","events","viewDays","weekStartsOn","startsWithToday","_c","excluded","_d","_e","weekendDays","_f","hourSegmentHeight","_g","eventWidth","startOfWeek","endOfWeek","startOfViewWeek","endOfViewWeek","eventsInWeek","getEventsInPeriod","periodStart","periodEnd","days","getSchedulerViewDays","forEach","day","previousDayEvents","dayEvents","sort","eventA","eventB","start","valueOf","map","ev","eventStart","eventEnd","end","startsBeforeDay","endsAfterDay","hourHeightModifier","top","differenceInMinutes","startDate","endDate","height","overlappingPreviousEvents","getOverLappingEvents","left","some","previousEvent","event","width","mappedEvents","getColumnCount","allEvents","prevOverlappingEvents","columnCount","Math","max","nextOverlappingEvents","filter","overLappingEvents","otherEvent","console","log","format","id","min","Date","getFullYear","getMonth","getDate","getHours","startOfHour","endOfHour","addSeconds","eventsInHour","getSchedulerEventsInPeriod","segment","setDate","setMonth","setYear","startOfSegment","endOfSegment","eventsInSegment","period","loop","getDay","args","today","isPast","isToday","isSameDay","isFuture","isWeekend","indexOf","inMonth","isSameMonth","getSchedulerDay","isEventInPeriod","isSameSecond","bottom","round","previousEventTop","previousEventBottom","minutes","trackByDayOrEvent","index","trackByHourColumn","toISOString","trackByHour","trackByHourSegment","getMinimumEventHeightInMinutes","getDefaultEventEnd","minimumMinutes","roundToNearest","amount","precision","getMinutesMoved","movedY","eventSnapSize","isDraggedWithinPeriod","newStart","newEnd","shouldFireDroppedEvent","dropEvent","calendarId","dropData","CalendarSchedulerUtils","DateAdapter","CalendarSchedulerViewComponent","cdr","utils","excludeDays","showEventContent","showEventActions","showEventStatus","showSegmentHour","zoomEventOnHover","snapDraggedEvents","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","dayHeaderClicked","EventEmitter","hourClicked","segmentClicked","eventClicked","eventTimesChanged","resizes","Map","eventDragEnter","dragActive","dragAlreadyMoved","ngOnInit","_this","refresh","refreshSubscription","subscribe","refreshAll","markForCheck","ngOnChanges","changes","refreshHeader","refreshHourGrid","refreshBody","ngOnDestroy","unsubscribe","getPositioningClasses","getDayClass","getTimeClass","getLengthClass","join","getMinutes","isBefore","durationInMinutes","leftToEndOfDay","leftDurationInMinutes","view","dayModifier","hourModifier","segmentModifier","eventModifier","resizeStarted","eventsContainer","resizeEvent","set","dayColumnWidth","floor","offsetWidth","resizeHelper","CalendarResizeHelper","validateResize","rectangle","resizing","adjustedEvents","tempEvents","lastResizeEvent","newEventDates","getResizedEventDates","adjustedEvent","eventIndex","restoreOriginalEvents","resizeEnded","get","delete","emit","type","CalendarEventTimesChangedEventType","Resize","minimumEventHeight","eventWithoutEnd","getOwnPropertySymbols","propertyIsEnumerable","__rest","smallestResizes","edges","daysDiff","right","minutesMoved","eventDropped","Drop","dragStarted","eventContainer","dragHelper","CalendarDragHelper","validateDrag","x","y","transform","size","linkedEvent","find","dragMove","dragEvent","newEventTimes","getDragMovedEventTimes","originalEvent_1","adjustedEvent_1","dragEnded","dragEndEvent","dayWidth","useY","Drag","daysDragged","adjustedEventsArray","has","originalEvent","existingColumnEvent","clear","ChangeDetectorRef","Inject","LOCALE_ID","tslib_1.__decorate","Input","Output","Component","selector","template","encapsulation","ViewEncapsulation","None","tslib_1.__param","CalendarSchedulerHourSegmentComponent","showHour","title","onMouseEnter","mouseEvent","isDisabled","onMouseLeave","onSegmentClick","stopPropagation","isCancelled","CalendarSchedulerHeaderComponent","onDayHeaderClick","CalendarSchedulerEventComponent","hostElement","showContent","showActions","showStatus","content","onEventClick","isClickable","ElementRef","host","[style.height.%]","CalendarSchedulerEventTitleComponent","class","CalendarSchedulerEventContentComponent","ngAfterViewInit","setTimeout","maxHeight","clientHeight","CalendarSchedulerEventActionsComponent","actions","setupActions","a","when","onActionClick","action","onClick","SchedulerEventTitleFormatter","tslib_1.__extends","CalendarEventTitleFormatter","SchedulerEventTitlePipe","schedulerEventTitle","titleType","Pipe","name","CalendarSchedulerDatePipe","dateFormatter","method","daysInWeek","allowedMethods","getOwnPropertyNames","getPrototypeOf","CalendarDateFormatter","iMethod","Error","SchedulerDateFormatter","dayViewHour","Intl","DateTimeFormat","weekViewTitle","year","month","dateInner","firstDay","includes","lastDay","firstDayMonth","lastDayMonth","firstDayYear","lastDayYear","prevMonthDate","prevMonthDay","daysInMonth","abs","prevMonthYear","Number","nextMonthDate","nextMonthDay","nextMonthYear","anyDateInMonth","SCHEDULER_CONFIG","InjectionToken","provideSchedulerConfig","adapterFactory","SchedulerModule","forRoot","ngModule","SchedulerModule_1","providers","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","CalendarModule","Éµ0","declarations","exports","week","addWeeks","addMonths","endOfMonth","startOfMonth","subDays","subWeeks","subMonths"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Auth configuration.\r\n */\r\n@Injectable()\r\nexport class SchedulerConfig {\r\n    locale?: string = 'en';\r\n    headerDateFormat?: 'weekNumber' | 'daysRange' = 'daysRange';\r\n    logEnabled?: boolean = false;\r\n\r\n    constructor(config: SchedulerConfig = {}) {\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return config && source !== undefined ? source : defaultValue;\r\n        }\r\n\r\n        this.locale = use(config.locale, this.locale);\r\n        this.headerDateFormat = use(config.headerDateFormat, this.headerDateFormat);\r\n        this.logEnabled = use(config.logEnabled, this.logEnabled);\r\n    }\r\n}\r\n","import {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewDay,\r\n    SchedulerViewEvent,\r\n    SchedulerViewHourSegment,\r\n    SchedulerView,\r\n    SchedulerViewPeriod\r\n} from '../models';\r\nimport {\r\n    WeekViewHour,\r\n    WeekViewHourSegment\r\n} from 'calendar-utils';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n\r\nexport enum DAYS_OF_WEEK {\r\n    SUNDAY = 0,\r\n    MONDAY = 1,\r\n    TUESDAY = 2,\r\n    WEDNESDAY = 3,\r\n    THURSDAY = 4,\r\n    FRIDAY = 5,\r\n    SATURDAY = 6\r\n}\r\n\r\nconst DEFAULT_WEEKEND_DAYS: number[] = [\r\n    DAYS_OF_WEEK.SUNDAY,\r\n    DAYS_OF_WEEK.SATURDAY\r\n];\r\n\r\nexport const DAYS_IN_WEEK: number = 7;\r\nexport const HOURS_IN_DAY: number = 24;\r\nexport const MINUTES_IN_HOUR: number = 60;\r\nexport const SECONDS_IN_DAY: number = 60 * 60 * 24;\r\n\r\nexport const DEFAULT_HOUR_SEGMENT_HEIGHT_PX = 40;\r\nexport const DEFAULT_EVENT_WIDTH = 1;\r\nexport const DEFAULT_HOUR_SEGMENTS = 2;\r\n\r\nexport interface Time {\r\n    hour: number;\r\n    minute: number;\r\n  }\r\n\r\nexport interface GetSchedulerViewHourGridArgs {\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    dayStart: Time;\r\n    dayEnd: Time;\r\n}\r\n\r\nexport function getSchedulerViewHourGrid(\r\n    dateAdapter: DateAdapter,\r\n    {\r\n        viewDate,\r\n        hourSegments,\r\n        dayStart,\r\n        dayEnd\r\n    }: GetSchedulerViewHourGridArgs\r\n): WeekViewHour[] {\r\n    const {\r\n        setMinutes,\r\n        setHours,\r\n        startOfDay,\r\n        startOfMinute,\r\n        endOfDay,\r\n        addMinutes,\r\n        addHours,\r\n        addDays\r\n      } = dateAdapter;\r\n    const hours: WeekViewHour[] = [];\r\n\r\n    let startOfView: Date = setMinutes(\r\n        setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)),\r\n        sanitiseMinutes(dayStart.minute)\r\n    );\r\n    let endOfView: Date = setMinutes(\r\n        setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)),\r\n        sanitiseMinutes(dayEnd.minute)\r\n    );\r\n    const segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\r\n    let startOfViewDay: Date = startOfDay(viewDate);\r\n    const endOfViewDay: Date = endOfDay(viewDate);\r\n    let dateAdjustment: (d: Date) => Date = (d: Date) => d;\r\n\r\n    // this means that we change from or to DST on this day and that's going to cause problems so we bump the date\r\n    if (startOfViewDay.getTimezoneOffset() !== endOfViewDay.getTimezoneOffset()) {\r\n        startOfViewDay = addDays(startOfViewDay, 1);\r\n        startOfView = addDays(startOfView, 1);\r\n        endOfView = addDays(endOfView, 1);\r\n        dateAdjustment = (d: Date) => addDays(d, -1);\r\n    }\r\n\r\n    for (let i: number = 0; i < HOURS_IN_DAY; i++) {\r\n    }\r\n\r\n    for (let i: number = 0; i < HOURS_IN_DAY; i++) {\r\n        const segments: WeekViewHourSegment[] = [];\r\n        for (let j: number = 0; j < hourSegments; j++) {\r\n          const date: Date = addMinutes(\r\n            addHours(startOfViewDay, i),\r\n            j * segmentDuration\r\n          );\r\n          if (date >= startOfView && date < endOfView) {\r\n            segments.push({\r\n              date: dateAdjustment(date),\r\n              displayDate: date,\r\n              isStart: j === 0\r\n            });\r\n          }\r\n        }\r\n        if (segments.length > 0) {\r\n          hours.push({ segments });\r\n        }\r\n    }\r\n\r\n    return hours;\r\n}\r\n\r\nexport interface GetSchedulerViewArgs {\r\n    events?: CalendarSchedulerEvent[];\r\n    viewDate: Date;\r\n    viewDays: number;\r\n    hourSegments: 1 | 2 | 4 | 6;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    dayStart: Time;\r\n    dayEnd: Time;\r\n    weekendDays?: number[];\r\n    excluded?: number[];\r\n    eventWidth: number;\r\n    hourSegmentHeight: number;\r\n    logEnabled?: boolean;\r\n}\r\n\r\nexport function getSchedulerView(\r\n    dateAdapter: DateAdapter,\r\n    {\r\n        events = [],\r\n        viewDate,\r\n        viewDays,\r\n        weekStartsOn,\r\n        startsWithToday,\r\n        excluded = [],\r\n        hourSegments = DEFAULT_HOUR_SEGMENTS,\r\n        dayStart,\r\n        dayEnd,\r\n        weekendDays = DEFAULT_WEEKEND_DAYS,\r\n        hourSegmentHeight = DEFAULT_HOUR_SEGMENT_HEIGHT_PX,\r\n        eventWidth = DEFAULT_EVENT_WIDTH,\r\n        logEnabled,\r\n    }: GetSchedulerViewArgs\r\n): SchedulerView {\r\n    if (!events) { events = []; }\r\n\r\n    const { addDays, startOfDay, endOfDay, startOfWeek, endOfWeek } = dateAdapter;\r\n    const startOfViewWeek: Date = startsWithToday || viewDays < DAYS_IN_WEEK ? startOfDay(viewDate) : startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const endOfViewWeek: Date = startsWithToday || viewDays < DAYS_IN_WEEK ? addDays(endOfDay(viewDate), viewDays - 1) : endOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n\r\n    const eventsInWeek: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n        events: events,\r\n        periodStart: startOfViewWeek,\r\n        periodEnd: endOfViewWeek\r\n    });\r\n\r\n    const days: SchedulerViewDay[] = getSchedulerViewDays(dateAdapter, {\r\n        viewDate: viewDate,\r\n        viewDays: viewDays,\r\n        weekStartsOn: weekStartsOn,\r\n        startsWithToday: startsWithToday,\r\n        excluded: excluded,\r\n        weekendDays: weekendDays\r\n    });\r\n    days.forEach((day: SchedulerViewDay) => {\r\n        const startOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(day.date), dayStart.hour), dayStart.minute);\r\n        const endOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(day.date)), dayEnd.hour), dayEnd.minute);\r\n        const previousDayEvents: SchedulerViewEvent[] = [];\r\n\r\n        const eventsInDay: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n            events: eventsInWeek,\r\n            periodStart: startOfView,\r\n            periodEnd: endOfView\r\n        });\r\n\r\n        const dayEvents = eventsInDay\r\n            .sort((eventA: CalendarSchedulerEvent, eventB: CalendarSchedulerEvent) => eventA.start.valueOf() - eventB.start.valueOf())\r\n            .map((ev: CalendarSchedulerEvent) => {\r\n                const eventStart: Date = ev.start;\r\n                const eventEnd: Date = ev.end || eventStart;\r\n                const startsBeforeDay: boolean = eventStart < startOfView;\r\n                const endsAfterDay: boolean = dateAdapter.addMinutes(eventEnd, -1) > endOfView;\r\n                const hourHeightModifier: number = ((hourSegments * hourSegmentHeight) + 1) / MINUTES_IN_HOUR; // +1 for the 1px segment bottom border\r\n\r\n                let top: number = 0;\r\n                if (eventStart > startOfView) {\r\n                    top += dateAdapter.differenceInMinutes(eventStart, startOfView);\r\n                }\r\n                top *= hourHeightModifier;\r\n\r\n                const startDate: Date = startsBeforeDay ? startOfView : eventStart;\r\n                const endDate: Date = endsAfterDay ? endOfView : eventEnd;\r\n                let height: number = dateAdapter.differenceInMinutes(endDate, startDate);\r\n                if (!ev.end) {\r\n                    height = hourSegmentHeight;\r\n                } else {\r\n                    height *= hourHeightModifier;\r\n                }\r\n\r\n                const bottom: number = top + height;\r\n                const overlappingPreviousEvents = getOverLappingEvents(\r\n                    previousDayEvents,\r\n                    top,\r\n                    bottom,\r\n                    logEnabled\r\n                );\r\n\r\n                let left: number = 0;\r\n                while (overlappingPreviousEvents.some(previousEvent => previousEvent.left === left)) {\r\n                    left += eventWidth;\r\n                }\r\n\r\n                const event: SchedulerViewEvent =\r\n                    <SchedulerViewEvent>{\r\n                        event: ev,\r\n                        top: top,\r\n                        height: height,\r\n                        width: eventWidth,\r\n                        left: left,\r\n                        startsBeforeDay: startsBeforeDay,\r\n                        endsAfterDay: endsAfterDay\r\n                    };\r\n\r\n                previousDayEvents.push(event);\r\n\r\n                return event;\r\n            });\r\n\r\n        function getColumnCount(\r\n            allEvents: SchedulerViewEvent[],\r\n            prevOverlappingEvents: SchedulerViewEvent[]\r\n        ): number {\r\n            const columnCount = Math.max(\r\n                ...prevOverlappingEvents.map((ev: SchedulerViewEvent) => ev.left + 1)\r\n            );\r\n\r\n            const nextOverlappingEvents = allEvents\r\n                .filter((ev: SchedulerViewEvent) => ev.left >= columnCount)\r\n                .filter((ev: SchedulerViewEvent) => {\r\n                    return (\r\n                        getOverLappingEvents(\r\n                            prevOverlappingEvents,\r\n                            ev.top,\r\n                            ev.top + ev.height,\r\n                            logEnabled\r\n                        ).length > 0\r\n                    );\r\n            });\r\n\r\n            if (nextOverlappingEvents.length > 0) {\r\n                return getColumnCount(allEvents, nextOverlappingEvents);\r\n            } else {\r\n                return columnCount;\r\n            }\r\n        }\r\n\r\n        const mappedEvents = dayEvents.map(event => {\r\n            const columnCount = getColumnCount(\r\n                dayEvents,\r\n                getOverLappingEvents(\r\n                    dayEvents,\r\n                    event.top,\r\n                    event.top + event.height,\r\n                    logEnabled\r\n                )\r\n            );\r\n\r\n            const width = 100 / columnCount;\r\n            return { ...event, left: event.left * width, width };\r\n        });\r\n\r\n        day.events = mappedEvents.map(event => {\r\n            const overLappingEvents = getOverLappingEvents(\r\n              mappedEvents.filter(otherEvent => otherEvent.left > event.left),\r\n              event.top,\r\n              event.top + event.height,\r\n              logEnabled\r\n            );\r\n\r\n            if (logEnabled) {\r\n                console.log(\r\n                    `DAY [${moment(day.date).format('dddd L')}] - EVENT ${event.event.id} [${moment(event.event.start).format('dddd L, LTS')} - ${moment(event.event.end).format('dddd L, LTS')}] overLappingEvents -> `,\r\n                    overLappingEvents\r\n                );\r\n            }\r\n\r\n            if (overLappingEvents.length > 0) {\r\n              return {\r\n                ...event,\r\n                width:\r\n                  Math.min(\r\n                    ...overLappingEvents.map(otherEvent => otherEvent.left)\r\n                  ) - event.left\r\n              };\r\n            }\r\n            return event;\r\n        });\r\n\r\n        day.hours = getSchedulerViewHourGrid(dateAdapter, {\r\n            viewDate: viewDate,\r\n            hourSegments: hourSegments,\r\n            dayStart: {\r\n                hour: dayStart.hour,\r\n                minute: dayStart.minute\r\n            },\r\n            dayEnd: {\r\n                hour: dayEnd.hour,\r\n                minute: dayEnd.minute\r\n            }\r\n        }).map((hour: WeekViewHour) => {\r\n            const date: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n\r\n            const startOfHour: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n            const endOfHour: Date = dateAdapter.addSeconds(dateAdapter.addHours(startOfHour, 1), -1);\r\n\r\n            const eventsInHour: SchedulerViewEvent[] = getSchedulerEventsInPeriod(dateAdapter, {\r\n                events: day.events,\r\n                periodStart: startOfHour,\r\n                periodEnd: endOfHour\r\n            });\r\n\r\n            const segments: SchedulerViewHourSegment[] =\r\n                hour.segments.map((segment: WeekViewHourSegment) => {\r\n                    segment.date = dateAdapter.setDate(dateAdapter.setMonth(dateAdapter.setYear(segment.date, day.date.getFullYear()), day.date.getMonth()), day.date.getDate());\r\n\r\n                    const startOfSegment: Date = segment.date;\r\n                    const endOfSegment: Date = dateAdapter.addSeconds(dateAdapter.addMinutes(startOfSegment, MINUTES_IN_HOUR / hourSegments), -1);\r\n\r\n                    const eventsInSegment: SchedulerViewEvent[] = getSchedulerEventsInPeriod(dateAdapter, {\r\n                        events: eventsInHour,\r\n                        periodStart: startOfSegment,\r\n                        periodEnd: endOfSegment\r\n                    });\r\n\r\n                    if (logEnabled) {\r\n                        console.log(\r\n                            `SEGMENT [${moment(startOfSegment).format('dddd L, LTS')} - ${moment(endOfSegment).format('dddd L, LTS')}] EVENTS -> `,\r\n                            eventsInSegment\r\n                        );\r\n                    }\r\n\r\n                    return <SchedulerViewHourSegment>{\r\n                        segment: segment,\r\n                        date: new Date(segment.date),\r\n                        events: eventsInSegment\r\n                    };\r\n                });\r\n\r\n            return <SchedulerViewHour>{\r\n                hour: hour,\r\n                date: date,\r\n                events: eventsInHour,\r\n                segments: segments\r\n            };\r\n        });\r\n    });\r\n\r\n    return <SchedulerView>{\r\n        days: days,\r\n        period: <SchedulerViewPeriod>{\r\n            events: eventsInWeek,\r\n            start: startOfViewWeek,\r\n            end: endOfViewWeek\r\n        }\r\n    };\r\n}\r\n\r\nexport interface GetSchedulerViewDaysArgs {\r\n    viewDate: Date;\r\n    viewDays: number;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    excluded?: number[];\r\n    weekendDays?: number[];\r\n}\r\n\r\nexport function getSchedulerViewDays(\r\n    dateAdapter: DateAdapter,\r\n    {\r\n        viewDate,\r\n        viewDays,\r\n        weekStartsOn,\r\n        startsWithToday,\r\n        excluded = [],\r\n        weekendDays = DEFAULT_WEEKEND_DAYS\r\n    }: GetSchedulerViewDaysArgs\r\n): SchedulerViewDay[] {\r\n    const start = startsWithToday || viewDays < DAYS_IN_WEEK\r\n        ? new Date(viewDate)\r\n        : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const days: SchedulerViewDay[] = [];\r\n    const loop = (i: number) => {\r\n        const date = dateAdapter.addDays(start, i);\r\n        if (!excluded.some((e: number) => date.getDay() === e)) {\r\n            days.push(getSchedulerDay(dateAdapter, { date, weekendDays }));\r\n        }\r\n    };\r\n    for (let i = 0; i < viewDays; i++) {\r\n        loop(i);\r\n    }\r\n    return days;\r\n}\r\n\r\nfunction getSchedulerDay(dateAdapter: DateAdapter, args: { date: Date, weekendDays: number[] }): SchedulerViewDay {\r\n    const date: Date = args.date;\r\n    const today: Date = dateAdapter.startOfDay(new Date());\r\n\r\n    return <SchedulerViewDay>{\r\n        date: date,\r\n        isPast: date < today,\r\n        isToday: dateAdapter.isSameDay(date, today),\r\n        isFuture: date >= dateAdapter.addDays(today, 1),\r\n        isWeekend: args.weekendDays.indexOf(dateAdapter.getDay(date)) > -1,\r\n        inMonth: dateAdapter.isSameMonth(date, today),\r\n        hours: []\r\n    };\r\n}\r\n\r\nexport interface GetEventsInPeriodArgs {\r\n    events: CalendarSchedulerEvent[];\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\nfunction getEventsInPeriod(\r\n    dateAdapter: DateAdapter,\r\n    {\r\n        events,\r\n        periodStart,\r\n        periodEnd\r\n    }: GetEventsInPeriodArgs\r\n): CalendarSchedulerEvent[] {\r\n    return events.filter((event) => isEventInPeriod(dateAdapter, { event: event, periodStart: periodStart, periodEnd: periodEnd }));\r\n}\r\n\r\nexport interface GetSchedulerEventsInPeriodArgs {\r\n    events: SchedulerViewEvent[];\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\nfunction getSchedulerEventsInPeriod(\r\n    dateAdapter: DateAdapter,\r\n    {\r\n        events,\r\n        periodStart,\r\n        periodEnd\r\n    }: GetSchedulerEventsInPeriodArgs\r\n): SchedulerViewEvent[] {\r\n    return events.filter((event) => isEventInPeriod(dateAdapter, { event: event.event, periodStart: periodStart, periodEnd: periodEnd }));\r\n}\r\n\r\ninterface IsEventInPeriodArgs {\r\n    event: CalendarSchedulerEvent;\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\nfunction isEventInPeriod(dateAdapter: DateAdapter, { event, periodStart, periodEnd}: IsEventInPeriodArgs): boolean {\r\n    const { isSameSecond, addSeconds } = dateAdapter;\r\n    const eventStart: Date = event.start;\r\n    const eventEnd: Date = event.end || event.start;\r\n\r\n    if (eventStart > periodStart && eventStart < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventStart < periodStart && eventEnd > periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(addSeconds(eventEnd, -1), periodStart) || isSameSecond(addSeconds(eventEnd, -1), periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nfunction getOverLappingEvents(events: SchedulerViewEvent[], top: number, bottom: number, logEnabled: boolean = false): SchedulerViewEvent[] {\r\n    return events.filter((previousEvent: SchedulerViewEvent) => {\r\n        top = Math.round(top);\r\n        bottom = Math.round(bottom);\r\n        const previousEventTop: number = Math.round(previousEvent.top);\r\n        const previousEventBottom: number = Math.round(previousEvent.top + previousEvent.height);\r\n\r\n        if (top < previousEventBottom && previousEventBottom < bottom) {\r\n            if (logEnabled) {\r\n                console.log('[getOverLappingEvents] - EVENT ' + previousEvent.event.id + ' -> top: ' + top + ' - bottom: ' + bottom + ' - previousEventTop: '\r\n                    + previousEventTop + ' - previousEventBottom: ' + previousEventBottom + ' -> top < previousEventBottom && previousEventBottom < bottom');\r\n            }\r\n            return true;\r\n        } else if (top < previousEventTop && previousEventTop < bottom) {\r\n            if (logEnabled) {\r\n                console.log('[getOverLappingEvents] - EVENT ' + previousEvent.event.id + ' -> top: ' + top + ' - bottom: ' + bottom + ' - previousEventTop: '\r\n                    + previousEventTop + ' - previousEventBottom: ' + previousEventBottom + ' -> top < previousEventTop && previousEventTop < bottom');\r\n            }\r\n            return true;\r\n        } else if (previousEventTop <= top && bottom <= previousEventBottom) {\r\n            if (logEnabled) {\r\n                console.log('[getOverLappingEvents] - EVENT ' + previousEvent.event.id + ' -> top: ' + top + ' - bottom: ' + bottom + ' - previousEventTop: '\r\n                    + previousEventTop + ' - previousEventBottom: ' + previousEventBottom + ' -> previousEventTop <= top && bottom <= previousEventBottom');\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\nfunction sanitiseHours(hours: number): number {\r\n    return Math.max(Math.min(23, hours), 0);\r\n}\r\n\r\nfunction sanitiseMinutes(minutes: number): number {\r\n    return Math.max(Math.min(59, minutes), 0);\r\n}\r\n","import {\r\n    SchedulerViewPeriod,\r\n    SchedulerViewEvent,\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment\r\n} from '../scheduler/models';\r\nimport {\r\n    WeekViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    CalendarView,\r\n    DateAdapter\r\n} from 'angular-calendar';\r\nimport { MINUTES_IN_HOUR } from '../scheduler/utils/calendar-scheduler-utils';\r\n\r\nexport function addPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.addDays,\r\n        week: dateAdapter.addWeeks,\r\n        month: dateAdapter.addMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function subPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.subDays,\r\n        week: dateAdapter.subWeeks,\r\n        month: dateAdapter.subMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function startOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.startOfDay,\r\n        week: dateAdapter.startOfWeek,\r\n        month: dateAdapter.startOfMonth\r\n    }[period](date);\r\n}\r\n\r\nexport function endOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.endOfDay,\r\n        week: dateAdapter.endOfWeek,\r\n        month: dateAdapter.endOfMonth\r\n    }[period](date);\r\n}\r\n\r\n\r\nexport const trackByDayOrEvent = (index: number, event: SchedulerViewEvent ) =>\r\n    (event.event.id ? event.event.id : event.event);\r\n\r\nexport const trackByHourColumn = (index: number, day: SchedulerViewDay) =>\r\n    day.hours[0] ? day.hours[0].segments[0].date.toISOString() : day;\r\n\r\nexport const trackByHour = (index: number, hour: WeekViewHour | SchedulerViewHour) =>\r\n    hour.segments[0].date.toISOString();\r\n\r\nexport const trackByHourSegment = (index: number, segment: SchedulerViewHourSegment) =>\r\n    segment.date.toISOString();\r\n\r\n\r\nexport function getMinimumEventHeightInMinutes(hourSegments: number, hourSegmentHeight: number) {\r\n    return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * hourSegmentHeight;\r\n}\r\n\r\nexport function getDefaultEventEnd(dateAdapter: DateAdapter, event: CalendarSchedulerEvent, minimumMinutes: number): Date {\r\n    return event.end ? event.end : dateAdapter.addMinutes(event.start, minimumMinutes);\r\n}\r\n\r\nexport function roundToNearest(amount: number, precision: number): number {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\n\r\nexport function getMinutesMoved(movedY: number, hourSegments: number, hourSegmentHeight: number, eventSnapSize: number): number {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\n\r\nexport function isDraggedWithinPeriod(newStart: Date, newEnd: Date, period: SchedulerViewPeriod): boolean {\r\n    const end = newEnd || newStart;\r\n    return (\r\n        (period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end)\r\n    );\r\n}\r\n\r\nexport function shouldFireDroppedEvent(dropEvent: { dropData?: { event?: CalendarSchedulerEvent; calendarId?: symbol } }, date: Date, calendarId: symbol): boolean {\r\n    return (\r\n        dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        dropEvent.dropData.calendarId !== calendarId\r\n    );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    getSchedulerViewHourGrid,\r\n    GetSchedulerViewHourGridArgs,\r\n    getSchedulerViewDays,\r\n    GetSchedulerViewDaysArgs,\r\n    getSchedulerView,\r\n    GetSchedulerViewArgs\r\n} from './calendar-scheduler-utils';\r\nimport { WeekViewHour } from 'calendar-utils';\r\nimport { SchedulerView, SchedulerViewDay } from '../models';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n@Injectable()\r\nexport class CalendarSchedulerUtils {\r\n    constructor(private dateAdapter: DateAdapter) { }\r\n\r\n    getSchedulerViewHourGrid(args: GetSchedulerViewHourGridArgs): WeekViewHour[] {\r\n        return getSchedulerViewHourGrid(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerViewDays(args: GetSchedulerViewDaysArgs): SchedulerViewDay[] {\r\n        return getSchedulerViewDays(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerView(args: GetSchedulerViewArgs): SchedulerView {\r\n        return getSchedulerView(this.dateAdapter, args);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ChangeDetectorRef,\r\n    OnChanges,\r\n    OnInit,\r\n    OnDestroy,\r\n    LOCALE_ID,\r\n    Inject,\r\n    TemplateRef,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    WeekViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    isBefore\r\n} from 'date-fns';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport { CalendarDragHelper } from 'angular-calendar/esm2015/modules/common/calendar-drag-helper.provider';\r\nimport { CalendarResizeHelper } from 'angular-calendar/esm2015/modules/common/calendar-resize-helper.provider';\r\nimport { SchedulerConfig } from './scheduler-config';\r\nimport { CalendarEventTimesChangedEventType, DateAdapter } from 'angular-calendar';\r\nimport { DragMoveEvent, DragEndEvent, DropEvent } from 'angular-draggable-droppable';\r\n\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewDay,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment,\r\n    SchedulerEventTimesChangedEvent,\r\n    SchedulerViewEvent,\r\n    SchedulerView\r\n} from './models';\r\nimport {\r\n    shouldFireDroppedEvent,\r\n    isDraggedWithinPeriod,\r\n    roundToNearest,\r\n    getMinutesMoved,\r\n    trackByHourColumn,\r\n    trackByDayOrEvent,\r\n    trackByHour,\r\n    trackByHourSegment,\r\n    getMinimumEventHeightInMinutes,\r\n    getDefaultEventEnd\r\n} from '../common/utils';\r\nimport {\r\n    DEFAULT_HOUR_SEGMENTS,\r\n    DEFAULT_HOUR_SEGMENT_HEIGHT_PX,\r\n    MINUTES_IN_HOUR,\r\n    Time,\r\n    DAYS_IN_WEEK\r\n} from './utils/calendar-scheduler-utils';\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\n/**\r\n *  [ngClass]=\"getPositioningClasses(event)\"\r\n *\r\n *  [style.top.px]=\"event.top\"\r\n *  [style.height.px]=\"event.height\"\r\n *  [style.left.%]=\"event.left\"\r\n *  [style.width.%]=\"event.width\"\r\n *\r\n *  DRAG & DROP & RESIZE -> https://github.com/mattlewis92/angular-calendar/blob/master/projects/angular-calendar/src/modules/week/calendar-week-view.component.ts\r\n *  FLEXBOX -> https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\n */\r\n@Component({\r\n    selector: 'calendar-scheduler-view',\r\n    template: `\r\n        <div class=\"cal-scheduler-view\">\r\n            <calendar-scheduler-header\r\n                [days]=\"days\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"headerTemplate\"\r\n                (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\">\r\n            </calendar-scheduler-header>\r\n\r\n            <div class=\"cal-scheduler\" #calendarContainer>\r\n                <div class=\"cal-scheduler-hour-rows aside\">\r\n                    <div class=\"cal-scheduler-hour align-center horizontal\" *ngFor=\"let hour of hours; trackBy:trackByHour\">\r\n                      <div class=\"cal-scheduler-time\">\r\n                        <div class=\"cal-scheduler-time-segment\" *ngFor=\"let segment of hour.segments\"\r\n                            [style.height.px]=\"hourSegmentHeight\">\r\n                            {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"cal-scheduler-cols aside\" #dayColumns\r\n                    [class.cal-resize-active]=\"resizes.size > 0\"\r\n                    mwlDroppable\r\n                    (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\r\n                    (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\r\n                    <div class=\"cal-scheduler-col\"\r\n                        *ngFor=\"let day of view.days; trackBy:trackByHourColumn\"\r\n                        [ngClass]=\"day?.cssClass\"\r\n                        [style.backgroundColor]=\"day.backgroundColor\">\r\n                        <div #eventContainer\r\n                            class=\"cal-scheduler-event-container\"\r\n                            *ngFor=\"let event of day.events; trackBy:trackByDayOrEvent\"\r\n                            [ngClass]=\"event.event?.cssClass\"\r\n                            [hidden]=\"event.height === 0 && event.width === 0\"\r\n                            [style.top.px]=\"event.top\"\r\n                            [style.height.px]=\"event.height\"\r\n                            [style.left.%]=\"event.left\"\r\n                            [style.width.%]=\"event.width\"\r\n                            [class.zoom-on-hover]=\"zoomEventOnHover\"\r\n\r\n                            mwlResizable\r\n                            [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth, top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\r\n                            [validateResize]=\"validateResize\"\r\n                            [allowNegativeResizes]=\"true\"\r\n                            (resizeStart)=\"resizeStarted(dayColumns, event, $event)\"\r\n                            (resizing)=\"resizing(event, $event)\"\r\n                            (resizeEnd)=\"resizeEnded(event)\"\r\n\r\n                            mwlDraggable\r\n                            dragActiveClass=\"cal-drag-active\"\r\n                            [dropData]=\"{event: event.event, calendarId: calendarId}\"\r\n                            [dragAxis]=\"{\r\n                                x: event.event.draggable && resizes.size === 0,\r\n                                y: event.event.draggable && resizes.size === 0\r\n                            }\"\r\n                            [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight} : {}\"\r\n                            [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                            [validateDrag]=\"validateDrag\"\r\n                            (dragPointerDown)=\"dragStarted(dayColumns, eventContainer, event)\"\r\n                            (dragging)=\"dragMove(event, $event)\"\r\n                            (dragEnd)=\"dragEnded(event, $event, dayColumnWidth, true)\">\r\n\r\n                            <div *ngIf=\"event.event?.resizable?.beforeStart && !event.startsBeforeDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    left: true,\r\n                                    top: true\r\n                                }\">\r\n                            </div>\r\n                            <calendar-scheduler-event\r\n                                [day]=\"day\"\r\n                                [event]=\"event\"\r\n                                [container]=\"eventContainer\"\r\n                                [showContent]=\"showEventContent && event.height >= 75\"\r\n                                [showActions]=\"showEventActions\"\r\n                                [showStatus]=\"showEventStatus\"\r\n                                [customTemplate]=\"eventTemplate\"\r\n                                [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                                (eventClicked)=\"eventClicked.emit($event)\">\r\n                            </calendar-scheduler-event>\r\n                            <div *ngIf=\"event.event?.resizable?.afterEnd && !event.endsAfterDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    right: true,\r\n                                    bottom: true\r\n                                }\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"cal-scheduler-hour\"\r\n                            *ngFor=\"let hour of day.hours; let i = index; trackBy:trackByHour\"\r\n                            [class.cal-even]=\"i % 2 === 0\"\r\n                            [class.cal-odd]=\"i % 2 === 1\"\r\n                            [ngClass]=\"hour.cssClass\"\r\n                            [style.backgroundColor]=\"hour.backgroundColor\"\r\n                            (mwlClick)=\"hourClicked.emit({hour: hour})\"\r\n                            [class.cal-past]=\"day.isPast\"\r\n                            [class.cal-today]=\"day.isToday\"\r\n                            [class.cal-future]=\"day.isFuture\"\r\n                            [class.cal-weekend]=\"day.isWeekend\"\r\n                            [class.cal-in-month]=\"day.inMonth\"\r\n                            [class.cal-out-month]=\"!day.inMonth\">\r\n                            <div class=\"cal-scheduler-hour-segments\">\r\n                                <calendar-scheduler-hour-segment\r\n                                    *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\r\n                                    [day]=\"day\"\r\n                                    [segment]=\"segment\"\r\n                                    [locale]=\"locale\"\r\n                                    [customTemplate]=\"cellTemplate\"\r\n                                    [hourSegmentHeight]=\"hourSegmentHeight\"\r\n                                    [showHour]=\"showSegmentHour\"\r\n                                    (segmentClicked)=\"segmentClicked.emit($event)\"\r\n                                    mwlDroppable\r\n                                    [dragOverClass]=\"!dragActive || !snapDraggedEvents ? 'cal-drag-over' : 'null'\"\r\n                                    dragActiveClass=\"cal-drag-active\"\r\n                                    (drop)=\"eventDropped($event, segment.date)\">\r\n                                </calendar-scheduler-hour-segment>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./calendar-scheduler-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarSchedulerViewComponent implements OnChanges, OnInit, OnDestroy {\r\n    /**\r\n     * The current view date\r\n     */\r\n    @Input() viewDate: Date;\r\n\r\n    /**\r\n     * The number of days shown in view\r\n     * - If this number is less than DAYS_IN_WEEK, the startsWithToday = false will be ignored\r\n     * - If this number is greater than DAYS_IN_WEEK, it will be normalized to DAYS_IN_WEEK\r\n     */\r\n    @Input() viewDays: number = DAYS_IN_WEEK;\r\n\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    @Input() events: CalendarSchedulerEvent[] = [];\r\n\r\n    /**\r\n     * The number of segments in an hour. Must be one of 1, 2, 4, 6\r\n     */\r\n    @Input() hourSegments: 1 | 2 | 4 | 6 = DEFAULT_HOUR_SEGMENTS;\r\n\r\n    /**\r\n    * The height in pixels of each hour segment\r\n    */\r\n    @Input() hourSegmentHeight: number = DEFAULT_HOUR_SEGMENT_HEIGHT_PX;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    @Input() excludeDays: number[] = [];\r\n\r\n    /**\r\n     * Specify if the first day of current scheduler view has to be today or the first day of the week\r\n     */\r\n    @Input() startsWithToday: boolean = false;\r\n\r\n    /**\r\n     * Specify if content must be shown or not\r\n     */\r\n    @Input() showEventContent: boolean = true;\r\n\r\n    /**\r\n     * Specify if actions must be shown or not\r\n     */\r\n    @Input() showEventActions: boolean = true;\r\n\r\n    /**\r\n     * Specify if status must be shown or not\r\n     */\r\n    @Input() showEventStatus: boolean = true;\r\n\r\n    /**\r\n     * Specify if hour must be shown on segment or not\r\n     */\r\n    @Input() showSegmentHour: boolean = false;\r\n\r\n    /**\r\n     * Specify if event must zoom on mouse hover or not\r\n     */\r\n    @Input() zoomEventOnHover: boolean = false;\r\n\r\n    /**\r\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar (day, hour or segment) cell.\r\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n     */\r\n    @Input() dayModifier: Function;\r\n    @Input() hourModifier: Function;\r\n    @Input() segmentModifier: Function;\r\n    @Input() eventModifier: Function;\r\n\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    @Input() refresh: Subject<any>;\r\n\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    @Input() locale: string;\r\n\r\n    /**\r\n     * The grid size to snap resizing and dragging of events to\r\n     */\r\n    @Input() eventSnapSize: number = this.hourSegmentHeight;\r\n\r\n    /**\r\n    * Whether to snap events to a grid when dragging\r\n    */\r\n    @Input() snapDraggedEvents: boolean = true;\r\n\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    @Input() weekStartsOn: number;\r\n\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    @Input() headerTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use to replace the day cell\r\n     */\r\n    @Input() cellTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for week view events\r\n     */\r\n    @Input() eventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for event titles\r\n     */\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for all day events\r\n     */\r\n    @Input() allDayEventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\r\n     */\r\n    @Input() weekendDays: number[];\r\n\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayStartHour: number = 0;\r\n\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    @Input() dayStartMinute: number = 0;\r\n\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayEndHour: number = 23;\r\n\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    @Input() dayEndMinute: number = 59;\r\n\r\n    /**\r\n     * Called when a header week day is clicked\r\n     */\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * Called when the hour is clicked\r\n     */\r\n    @Output() hourClicked: EventEmitter<{ hour: SchedulerViewHour }> = new EventEmitter<{ hour: SchedulerViewHour }>();\r\n\r\n    /**\r\n     * Called when the segment is clicked\r\n     */\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    /**\r\n     * Called when the event is clicked\r\n     */\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    /**\r\n     * Called when an event is resized or dragged and dropped\r\n     */\r\n    @Output() eventTimesChanged: EventEmitter<SchedulerEventTimesChangedEvent> = new EventEmitter<SchedulerEventTimesChangedEvent>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    view: SchedulerView;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    days: SchedulerViewDay[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    hours: WeekViewHour[] = [];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    // resizes: Map<CalendarSchedulerEvent, SchedulerResizeEvent> = new Map();\r\n    resizes: Map<CalendarSchedulerEvent, ResizeEvent> = new Map();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDragEnter: number = 0;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragActive: boolean = false;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragAlreadyMoved = false;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateResize: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateDrag: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dayColumnWidth: number;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    calendarId: symbol = Symbol('angular calendar scheduler view id');\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourColumn = trackByHourColumn;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByDayOrEvent = trackByDayOrEvent;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHour = trackByHour;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourSegment = trackByHourSegment;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string, private config: SchedulerConfig,\r\n        private utils: CalendarSchedulerUtils, private dateAdapter: DateAdapter) {\r\n        this.locale = this.config.locale || locale;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void {\r\n        this.viewDays = Math.min(this.viewDays, DAYS_IN_WEEK);\r\n\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.viewDate || changes.viewDays || changes.excludeDays || changes.weekendDays) {\r\n            this.refreshHeader();\r\n        }\r\n\r\n        if (changes.viewDate ||\r\n            changes.viewDays ||\r\n            changes.events ||\r\n            changes.dayStartHour ||\r\n            changes.dayEndHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndMinute ||\r\n            changes.excludeDays ||\r\n            changes.eventWidth\r\n        ) {\r\n            this.refreshHourGrid();\r\n            this.refreshBody();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getPositioningClasses(day: SchedulerViewDay, event: CalendarSchedulerEvent): string {\r\n        const classes: string[] = [\r\n            this.getDayClass(event.start),\r\n            this.getTimeClass(day.date, event),\r\n            this.getLengthClass(day.date, event)\r\n        ];\r\n        return classes.join(' ');\r\n    }\r\n\r\n    private getDayClass(date: Date): string {\r\n        return '';\r\n    }\r\n\r\n    private getTimeClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            let hours: number = event.start.getHours();\r\n            if (this.dayStartHour > 0) { hours = event.start.getHours() - this.dayStartHour; }\r\n            const hoursString: string = hours < 10 ? `0${hours}` : `${hours}`;\r\n            const minutesString: string = event.start.getMinutes() < 10 ? `0${event.start.getMinutes()}` : `${event.start.getMinutes()}`;\r\n            return `time${hoursString}${minutesString}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            return `time0000`;\r\n        }\r\n    }\r\n\r\n    private getLengthClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            const durationInMinutes: number = this.dateAdapter.differenceInMinutes(event.end, event.start);\r\n            const leftToEndOfDay: number = this.dateAdapter.differenceInMinutes(this.dateAdapter.setMinutes(this.dateAdapter.setHours(event.start, this.dayEndHour + 1), 0), event.start);\r\n            return leftToEndOfDay > durationInMinutes ? `length${durationInMinutes}` : `length${leftToEndOfDay}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            let leftDurationInMinutes: number = 0;\r\n            if (this.dateAdapter.isSameDay(date, event.end)) {\r\n                leftDurationInMinutes = this.dateAdapter.differenceInMinutes(event.end, this.dateAdapter.startOfDay(date));\r\n                if (this.dayStartHour > 0) { leftDurationInMinutes = (event.end.getHours() - this.dayStartHour) * MINUTES_IN_HOUR; }\r\n            } else {\r\n                leftDurationInMinutes = ((this.dayEndHour + 1) - this.dayStartHour) * MINUTES_IN_HOUR;\r\n            }\r\n            return `length${leftDurationInMinutes}`;\r\n        }\r\n    }\r\n\r\n\r\n    private refreshHourGrid(): void {\r\n        this.hours = this.utils.getSchedulerViewHourGrid({\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            }\r\n        });\r\n    }\r\n\r\n    private refreshHeader(): void {\r\n        this.days = this.utils.getSchedulerViewDays({\r\n            viewDate: this.viewDate,\r\n            viewDays: this.viewDays,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays\r\n        });\r\n    }\r\n\r\n    private refreshBody(events?: CalendarSchedulerEvent[]): void {\r\n        this.view = this.getSchedulerView(events || this.events);\r\n\r\n        if (this.dayModifier) {\r\n            this.days.forEach(day => this.dayModifier(day));\r\n        }\r\n\r\n        if (this.dayModifier || this.hourModifier || this.segmentModifier) {\r\n            this.view.days.forEach(day => {\r\n                if (this.dayModifier) {\r\n                    this.dayModifier(day);\r\n                }\r\n                day.hours.forEach((hour: SchedulerViewHour) => {\r\n                    if (this.hourModifier) {\r\n                        this.hourModifier(hour);\r\n                    }\r\n                    hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                        if (this.segmentModifier) {\r\n                            this.segmentModifier(segment);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.eventModifier) {\r\n            this.events.forEach(event => this.eventModifier(event));\r\n        }\r\n    }\r\n\r\n    private refreshAll(): void {\r\n        this.refreshHeader();\r\n        this.refreshHourGrid();\r\n        this.refreshBody();\r\n    }\r\n\r\n\r\n    private getSchedulerView(events: CalendarSchedulerEvent[]): SchedulerView {\r\n        return this.utils.getSchedulerView({\r\n            events: events,\r\n            viewDate: this.viewDate,\r\n            viewDays: this.viewDays,\r\n            hourSegments: this.hourSegments,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            dayStart: <Time>{\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: <Time>{\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            },\r\n            excluded: this.excludeDays,\r\n            eventWidth: 1,\r\n            hourSegmentHeight: this.hourSegmentHeight,\r\n            logEnabled: this.config.logEnabled\r\n        });\r\n    }\r\n\r\n\r\n    //#region RESIZE\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeStarted(eventsContainer: HTMLElement, event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n\r\n        const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(eventsContainer);\r\n        this.validateResize = ({ rectangle }) => resizeHelper.validateResize({ rectangle });\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizing(event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        const adjustedEvents = new Map<CalendarSchedulerEvent, CalendarSchedulerEvent>();\r\n\r\n        const tempEvents = [...this.events];\r\n\r\n        this.resizes.forEach((lastResizeEvent, ev) => {\r\n            const newEventDates = this.getResizedEventDates(\r\n                ev,\r\n                lastResizeEvent\r\n            );\r\n            const adjustedEvent = { ...ev, ...newEventDates };\r\n            adjustedEvents.set(adjustedEvent, ev);\r\n            const eventIndex = tempEvents.indexOf(ev);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents);\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeEnded(event: SchedulerViewEvent): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        const lastResizeEvent = this.resizes.get(event.event);\r\n        this.resizes.delete(event.event);\r\n        const newEventDates = this.getResizedEventDates(\r\n            event.event,\r\n            lastResizeEvent\r\n        );\r\n        this.eventTimesChanged.emit(\r\n            <SchedulerEventTimesChangedEvent>{\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: event.event,\r\n                type: CalendarEventTimesChangedEventType.Resize\r\n            });\r\n    }\r\n\r\n    private getResizedEventDates(event: CalendarSchedulerEvent, resizeEvent: ResizeEvent): { start: Date, end: Date} {\r\n        const minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);\r\n        const newEventDates = {\r\n            start: event.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, event, minimumEventHeight)\r\n        };\r\n        const { end, ...eventWithoutEnd } = event;\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)\r\n        };\r\n\r\n        if (resizeEvent.edges.left) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.left / this.dayColumnWidth\r\n            );\r\n            const newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.right) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.right / this.dayColumnWidth\r\n            );\r\n            const newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n\r\n        if (resizeEvent.edges.top) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.top as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.bottom) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.bottom as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region DRAG & DROP\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent: DropEvent<{ event?: CalendarSchedulerEvent; calendarId?: symbol }>, date: Date): void {\r\n        if (shouldFireDroppedEvent(dropEvent, date, this.calendarId)) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    type: CalendarEventTimesChangedEventType.Drop,\r\n                    event: dropEvent.dropData.event,\r\n                    newStart: date,\r\n                    newEnd: null\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainer: HTMLElement, eventContainer: HTMLElement, event?: SchedulerViewEvent): void {\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n        const dragHelper: CalendarDragHelper = new CalendarDragHelper(\r\n            eventsContainer,\r\n            eventContainer\r\n        );\r\n        this.validateDrag = ({ x, y, transform }) =>\r\n            this.resizes.size === 0 && dragHelper.validateDrag({\r\n                x,\r\n                y,\r\n                snapDraggedEvents: this.snapDraggedEvents,\r\n                dragAlreadyMoved: this.dragAlreadyMoved,\r\n                transform\r\n            });\r\n            this.dragActive = true;\r\n            this.dragAlreadyMoved = false;\r\n            this.eventDragEnter = 0;\r\n            if (!this.snapDraggedEvents && event) {\r\n                this.view.days.forEach((day: SchedulerViewDay) => {\r\n                const linkedEvent = day.events.find(ev => ev.event === event.event && ev !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n          }\r\n          this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(event: SchedulerViewEvent, dragEvent: DragMoveEvent) {\r\n        if (this.snapDraggedEvents) {\r\n            const newEventTimes = this.getDragMovedEventTimes(\r\n                event,\r\n                dragEvent,\r\n                this.dayColumnWidth,\r\n                true\r\n            );\r\n            const originalEvent = event.event;\r\n            const adjustedEvent = { ...originalEvent, ...newEventTimes };\r\n            const tempEvents = this.events.map(ev => {\r\n                if (ev === originalEvent) {\r\n                    return adjustedEvent;\r\n                }\r\n                return ev;\r\n            });\r\n\r\n            this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]));\r\n        }\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n\r\n    dragEnded(event: SchedulerViewEvent, dragEndEvent: DragEndEvent, dayWidth: number, useY = false): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        this.dragActive = false;\r\n        const { start, end } = this.getDragMovedEventTimes(event, dragEndEvent, dayWidth, useY);\r\n        if (\r\n            this.eventDragEnter > 0 &&\r\n            isDraggedWithinPeriod(start, end, this.view.period)\r\n        ) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    newStart: start,\r\n                    newEnd: end,\r\n                    event: event.event,\r\n                    type: CalendarEventTimesChangedEventType.Drag\r\n                });\r\n        }\r\n    }\r\n\r\n    private getDragMovedEventTimes(event: SchedulerViewEvent, dragEndEvent: DragEndEvent | DragMoveEvent, dayWidth: number, useY: boolean): { start: Date, end: Date} {\r\n        const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\r\n        const minutesMoved = useY ?\r\n            getMinutesMoved(\r\n                dragEndEvent.y,\r\n                this.hourSegments,\r\n                this.hourSegmentHeight,\r\n                this.eventSnapSize)\r\n            : 0;\r\n\r\n        const start = this.dateAdapter.addMinutes(\r\n            this.dateAdapter.addDays(event.event.start, daysDragged),\r\n            minutesMoved\r\n        );\r\n        let end: Date;\r\n        if (event.event.end) {\r\n            end = this.dateAdapter.addMinutes(\r\n                this.dateAdapter.addDays(event.event.end, daysDragged),\r\n                minutesMoved\r\n            );\r\n        }\r\n\r\n        return { start, end };\r\n    }\r\n\r\n    private restoreOriginalEvents(tempEvents: CalendarSchedulerEvent[], adjustedEvents: Map<CalendarSchedulerEvent, CalendarSchedulerEvent>) {\r\n        this.refreshBody(tempEvents);\r\n        const adjustedEventsArray = tempEvents.filter(event => adjustedEvents.has(event));\r\n        this.view.days.forEach(day => {\r\n            adjustedEventsArray.forEach(adjustedEvent => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = day.events.find(ev => ev.event === adjustedEvent);\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                } else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    day.events.push({\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n      }\r\n\r\n    //#endregion\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    SchedulerViewHourSegment,\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-hour-segment',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-hour-segment\"\r\n                [title]=\"title\"\r\n                [ngClass]=\"segment?.cssClass\"\r\n                [class.has-events]=\"segment.events.length > 0\"\r\n                [class.cal-cancelled]=\"segment.isCancelled\"\r\n                [class.cal-disabled]=\"segment.isDisabled\"\r\n                [style.backgroundColor]=\"segment.backgroundColor\"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                (mwlClick)=\"onSegmentClick($event, segment)\">\r\n                <div class=\"cal-scheduler-time unselectable\" *ngIf=\"showHour && segment.events.length === 0\">\r\n                    {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                segment: segment,\r\n                locale: locale,\r\n                hourSegmentHeight: hourSegmentHeight,\r\n                showHour: showHour,\r\n                segmentClicked: segmentClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHourSegmentComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() segment: SchedulerViewHourSegment;\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() hourSegmentHeight: number = 58;\r\n\r\n    @Input() showHour: boolean = false;\r\n\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    ngOnInit(): void {\r\n        this.title = this.title || moment(this.segment.date).format('dddd L, LT');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseEnter(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseLeave(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onSegmentClick(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        if (segment.events.length === 0 && !segment.isDisabled && !segment.isCancelled) {\r\n            this.segmentClicked.emit({ segment: segment });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SchedulerViewDay } from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-header',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-headers\">\r\n                <div class=\"cal-header aside cal-header-clock align-center\">\r\n                    <i class=\"material-icons md-32\" style=\"margin:auto;\">schedule</i>\r\n                </div>\r\n\r\n                <div class=\"cal-header-cols aside\">\r\n                    <div\r\n                        class=\"cal-header\"\r\n                        *ngFor=\"let day of days\"\r\n                        [class.cal-past]=\"day.isPast\"\r\n                        [class.cal-today]=\"day.isToday\"\r\n                        [class.cal-future]=\"day.isFuture\"\r\n                        [class.cal-weekend]=\"day.isWeekend\"\r\n                        (mwlClick)=\"onDayHeaderClick($event, day)\">\r\n                        <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\r\n                        <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                days: days,\r\n                locale: locale,\r\n                dayHeaderClicked: dayHeaderClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHeaderComponent {\r\n\r\n    @Input() days: SchedulerViewDay[];\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onDayHeaderClick(mouseEvent: MouseEvent, day: SchedulerViewDay): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        this.dayHeaderClicked.emit({ day: day });\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef, OnInit, ElementRef } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-event\"\r\n                [title]=\"title\"\r\n                [style.max-width.px]=\"container.clientWidth - 4\"\r\n                [class.cal-cancelled]=\"event.event.isCancelled\"\r\n                [class.cal-disabled]=\"event.event.isDisabled\"\r\n                [class.cal-not-clickable]=\"!event.event.isClickable\"\r\n                [class.cal-draggable]=\"event.event.draggable\"\r\n                [class.cal-starts-before-day]=\"event.startsBeforeDay\"\r\n                [class.cal-ends-after-day]=\"event.endsAfterDay\"\r\n                [style.backgroundColor]=\"event.event.color?.secondary\"\r\n                [style.borderColor]=\"event.event.color?.primary\"\r\n                (mwlClick)=\"onEventClick($event, event.event)\"\r\n                (mouseenter)=\"onMouseEnter()\"\r\n                (mouseleave)=\"onMouseLeave()\">\r\n                <calendar-scheduler-event-title\r\n                    view=\"week\"\r\n                    [event]=\"event.event\"\r\n                    [showStatus]=\"showStatus\"\r\n                    [showContent]=\"showContent\"\r\n                    [showActions]=\"showActions\"\r\n                    [customTemplate]=\"eventTitleTemplate\">\r\n                </calendar-scheduler-event-title>\r\n                <calendar-scheduler-event-content\r\n                    *ngIf=\"showContent\"\r\n                    [event]=\"event.event\"\r\n                    [eventContainer]=\"container\">\r\n                </calendar-scheduler-event-content>\r\n                <calendar-scheduler-event-actions\r\n                    *ngIf=\"showActions && showContent && (event.event.isClickable || event.event.isDisabled)\"\r\n                    [event]=\"event.event\">\r\n                </calendar-scheduler-event-actions>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                event: event,\r\n                showContent: showContent,\r\n                showActions: showActions,\r\n                showStatus: showStatus,\r\n                eventTitleTemplate: eventTitleTemplate,\r\n                eventClicked: eventClicked\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        '[style.height.%]': '100'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() event: SchedulerViewEvent;\r\n\r\n    @Input() container: HTMLElement;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    constructor(private hostElement: ElementRef) {   }\r\n\r\n    public ngOnInit(): void {\r\n        this.title = this.title || `${this.event.event.title}, ${this.event.event.content ? `${this.event.event.content},` : null} ${moment(this.event.event.start).format('dddd L, LT')}`;\r\n    }\r\n\r\n    onMouseEnter(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    onMouseLeave(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onEventClick(mouseEvent: MouseEvent, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n        if (event.isClickable) {\r\n            this.eventClicked.emit({ event: event });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-title',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div\r\n                class=\"cal-scheduler-event-title\"\r\n                [innerHTML]=\"event.title | schedulerEventTitle:view:event\">\r\n            </div>\r\n            <calendar-scheduler-event-actions\r\n                *ngIf=\"showActions && !showContent && (event.isClickable || event.isDisabled)\"\r\n                class=\"no-content-actions\"\r\n                [event]=\"event\">\r\n            </calendar-scheduler-event-actions>\r\n            <div *ngIf=\"event.status && showStatus\"\r\n                class=\"cal-scheduler-event-status\"\r\n                [class.ok]=\"event.status === 'ok'\"\r\n                [class.warning]=\"event.status === 'warning'\"\r\n                [class.danger]=\"event.status === 'danger'\">\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                view: view,\r\n                event: event,\r\n                showStatus: showStatus,\r\n                showContent: showContent,\r\n                showActions: showActions\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-title-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventTitleComponent {\r\n\r\n    @Input() view: string;\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n}\r\n","import { Component, Input, ElementRef, AfterViewInit } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-content',\r\n    template: `\r\n        <div *ngIf=\"event.content\"\r\n            class=\"cal-scheduler-event-content\"\r\n            [style.max-height.px]=\"maxHeight\"\r\n            [innerHTML]=\"maxHeight && maxHeight >= 30 ? event.content : null\">\r\n        </div>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-content-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventContentComponent implements AfterViewInit {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() eventContainer: HTMLElement;\r\n\r\n    maxHeight: number;\r\n\r\n    constructor(private hostElement: ElementRef) {  }\r\n\r\n    public ngAfterViewInit(): void {\r\n        setTimeout(() => { this.maxHeight = this.eventContainer.clientHeight - 70; }, 0);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    CalendarSchedulerEventAction\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-actions',\r\n    template: `\r\n        <span *ngIf=\"event.actions\"\r\n            class=\"cal-scheduler-event-actions\">\r\n            <a\r\n                class=\"cal-scheduler-event-action\"\r\n                href=\"javascript:;\"\r\n                *ngFor=\"let action of actions\"\r\n                (mwlClick)=\"onActionClick($event, action, event)\"\r\n                [ngClass]=\"action.cssClass\"\r\n                [innerHtml]=\"action.label\"\r\n                [title]=\"action.title\">\r\n            </a>\r\n        </span>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-actions-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventActionsComponent implements OnInit, OnChanges {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    public actions: CalendarSchedulerEventAction[] = [];\r\n\r\n    public ngOnInit(): void {\r\n        this.setupActions();\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.event) {\r\n            this.setupActions();\r\n        }\r\n    }\r\n\r\n    private setupActions(): void {\r\n        this.actions = this.event.isCancelled\r\n            ? this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'cancelled')\r\n            : this.event.isDisabled\r\n                ? this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'disabled')\r\n                : this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'enabled');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onActionClick(mouseEvent: MouseEvent, action: CalendarSchedulerEventAction, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        action.onClick(event);\r\n    }\r\n}\r\n","import { CalendarEventTitleFormatter } from 'angular-calendar';\r\n\r\nexport class SchedulerEventTitleFormatter extends CalendarEventTitleFormatter {\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CalendarSchedulerEvent } from '../models';\r\nimport { SchedulerEventTitleFormatter } from '../formatters/scheduler-event-title-formatter.provider';\r\n\r\n@Pipe({\r\n  name: 'schedulerEventTitle'\r\n})\r\nexport class SchedulerEventTitlePipe implements PipeTransform {\r\n  constructor(private schedulerEventTitle: SchedulerEventTitleFormatter) {}\r\n\r\n  transform(title: string, titleType: string, event: CalendarSchedulerEvent): string {\r\n    return this.schedulerEventTitle[titleType](event);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\r\nimport { CalendarDateFormatter, DateAdapter } from 'angular-calendar';\r\n\r\n@Pipe({\r\n  name: 'calendarSchedulerDate'\r\n})\r\nexport class CalendarSchedulerDatePipe implements PipeTransform {\r\n  constructor(\r\n    private dateAdapter: DateAdapter,\r\n    private dateFormatter: CalendarDateFormatter,\r\n    @Inject(LOCALE_ID) private locale: string\r\n  ) {}\r\n\r\n  transform(\r\n    date: Date,\r\n    method: string,\r\n    locale: string = this.locale,\r\n    weekStartsOn: number = 0,\r\n    excludeDays: number[] = [],\r\n    daysInWeek?: number,\r\n    startsWithToday?: boolean\r\n  ): string {\r\n    if (typeof this.dateFormatter[method] === 'undefined') {\r\n      const allowedMethods = Object.getOwnPropertyNames(\r\n        Object.getPrototypeOf(CalendarDateFormatter.prototype)\r\n      ).filter(iMethod => iMethod !== 'constructor');\r\n      throw new Error(\r\n        `${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(\r\n          ', '\r\n        )}`\r\n      );\r\n    }\r\n    return this.dateFormatter[method]({\r\n      dateAdapter: this.dateAdapter,\r\n      date,\r\n      locale,\r\n      weekStartsOn,\r\n      excludeDays,\r\n      daysInWeek,\r\n      startsWithToday\r\n    });\r\n  }\r\n}\r\n","import { CalendarDateFormatter, DateFormatterParams, DateAdapter } from 'angular-calendar';\r\nimport { DAYS_IN_WEEK } from '../utils/calendar-scheduler-utils';\r\n\r\nexport interface SchedulerDateFormatterParams extends DateFormatterParams {\r\n    dateAdapter: DateAdapter;\r\n    startsWithToday: boolean;\r\n}\r\n\r\nexport class SchedulerDateFormatter extends CalendarDateFormatter {\r\n\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    public dayViewHour({ date, locale }: SchedulerDateFormatterParams): string {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);\r\n    }\r\n\r\n    public weekViewTitle({ dateAdapter, date, locale, weekStartsOn, excludeDays, daysInWeek, startsWithToday }: SchedulerDateFormatterParams): string {\r\n        // http://generatedcontent.org/post/59403168016/esintlapi\r\n        const year: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);\r\n        const month: string = new Intl.DateTimeFormat(locale, { month: 'short' }).format(date);\r\n\r\n        const dateInner: Date = startsWithToday || daysInWeek < DAYS_IN_WEEK\r\n            ? date\r\n            : dateAdapter.startOfWeek(date, { weekStartsOn: weekStartsOn });\r\n\r\n        // var firstDay: number = date.getDate() - date.getDay() + 1; // First day is the day of the month - the day of the week\r\n        let firstDay: number = dateInner.getDate();\r\n        while (excludeDays.includes(firstDay)) {\r\n            firstDay += 1;\r\n        }\r\n\r\n        let lastDay: number = firstDay + (daysInWeek - 1); // last day is the first day + (daysInWeek - 1)\r\n        while (excludeDays.includes(lastDay)) {\r\n            lastDay += 1;\r\n        }\r\n\r\n        let firstDayMonth: string = month;\r\n        let lastDayMonth: string = month;\r\n\r\n        let firstDayYear: string = year;\r\n        let lastDayYear: string = year;\r\n\r\n        if (firstDay < 1) {\r\n            const prevMonthDate: Date = new Date(dateInner.getFullYear(), dateInner.getMonth() - 1);\r\n            firstDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(prevMonthDate);\r\n            const daysInPrevMonth: number = this.daysInMonth(prevMonthDate);\r\n\r\n            let i: number = 0;\r\n            let prevMonthDay: number = daysInPrevMonth;\r\n            for (i = 0; i < Math.abs(firstDay); i++) {\r\n                prevMonthDay--;\r\n            }\r\n            firstDay = prevMonthDay;\r\n\r\n            const prevMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(prevMonthDate);\r\n            if (Number(prevMonthYear) < Number(year)) {\r\n                firstDayYear = prevMonthYear;\r\n            }\r\n        }\r\n\r\n        const daysInMonth: number = this.daysInMonth(dateInner);\r\n        if (lastDay > daysInMonth) {\r\n            const nextMonthDate: Date = new Date(dateInner.getFullYear(), dateInner.getMonth() + 1);\r\n            lastDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(nextMonthDate);\r\n\r\n            let i: number = 0;\r\n            let nextMonthDay: number = 0;\r\n            for (i = 0; i < (lastDay - daysInMonth); i++) {\r\n                nextMonthDay++;\r\n            }\r\n            lastDay = nextMonthDay;\r\n\r\n            const nextMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(nextMonthDate);\r\n            if (Number(nextMonthYear) > Number(year)) {\r\n                lastDayYear = nextMonthYear;\r\n            }\r\n        }\r\n\r\n        return `${firstDay}` + (firstDayMonth !== lastDayMonth || lastDay === firstDay ? ' ' + firstDayMonth : '') +\r\n            (firstDayYear !== lastDayYear ? ' ' + firstDayYear : '') +\r\n            (lastDay === firstDay ? '' : ` - ${lastDay} ${lastDayMonth} ${lastDayYear}`);\r\n    }\r\n\r\n    private daysInMonth(anyDateInMonth: Date): number {\r\n        return new Date(anyDateInMonth.getFullYear(), anyDateInMonth.getMonth() + 1, 0).getDate();\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { CalendarSchedulerViewComponent } from './calendar-scheduler-view.component';\r\nimport { CalendarSchedulerHourSegmentComponent } from './calendar-scheduler-hour-segment.component';\r\nimport { CalendarSchedulerHeaderComponent } from './calendar-scheduler-header.component';\r\nimport { CalendarSchedulerEventComponent } from './calendar-scheduler-event.component';\r\nimport { CalendarSchedulerEventTitleComponent } from './calendar-scheduler-event-title.component';\r\nimport { CalendarSchedulerEventContentComponent } from './calendar-scheduler-event-content.component';\r\nimport { CalendarSchedulerEventActionsComponent } from './calendar-scheduler-event-actions.component';\r\n\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\nimport { SchedulerEventTitlePipe } from './pipes/scheduler-event-title.pipe';\r\nimport { CalendarSchedulerDatePipe } from './pipes/calendar-scheduler-date.pipe';\r\n\r\nimport { SchedulerDateFormatter } from './formatters/scheduler-date-formatter.provider';\r\nimport { SchedulerEventTitleFormatter } from './formatters/scheduler-event-title-formatter.provider';\r\n\r\nexport * from './calendar-scheduler-view.component';\r\nexport * from './formatters/scheduler-date-formatter.provider';\r\nexport * from './formatters/scheduler-event-title-formatter.provider';\r\nexport * from './pipes/scheduler-event-title.pipe';\r\nexport * from './utils/calendar-scheduler-utils';\r\nexport * from './utils/calendar-scheduler-utils.provider';\r\nexport * from '../common/utils';\r\nexport * from './models';\r\n\r\nimport { SchedulerConfig } from './scheduler-config';\r\n\r\nexport const SCHEDULER_CONFIG = new InjectionToken('SchedulerConfig');\r\n\r\nexport function provideSchedulerConfig(config: SchedulerConfig) {\r\n    return new SchedulerConfig(config);\r\n}\r\n\r\n/**\r\n * The main module of this library. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalendarModule, DateAdapter } from 'angular-calendar';\r\n * import { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n * import { SchedulerModule } from 'angular-calendar-scheduler';\r\n *\r\n * @NgModule({\r\n *  imports: [\r\n *     CalendarModule.forRoot({\r\n *       provide: DateAdapter,\r\n *       useFactory: adapterFactory\r\n *     }),\r\n *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    })\r\n  ],\r\n  declarations: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent,\r\n    SchedulerEventTitlePipe,\r\n    CalendarSchedulerDatePipe\r\n  ],\r\n  providers: [\r\n    CalendarSchedulerUtils,\r\n    SchedulerEventTitlePipe,\r\n    CalendarSchedulerDatePipe,\r\n    SchedulerEventTitleFormatter,\r\n    SchedulerDateFormatter\r\n  ],\r\n  exports: [\r\n    CalendarSchedulerDatePipe,\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent\r\n  ]\r\n})\r\nexport class SchedulerModule {\r\n  static forRoot(config?: SchedulerConfig): ModuleWithProviders {\r\n    return {\r\n        ngModule: SchedulerModule,\r\n        providers: [\r\n            { provide: SCHEDULER_CONFIG, useValue: config },\r\n            { provide: SchedulerConfig, useFactory: provideSchedulerConfig, deps: [SCHEDULER_CONFIG] }\r\n        ]\r\n    };\r\n}\r\n}\r\n"]}